[{"/home/pg07codes/Desktop/fokus/src/store/index.js":"1","/home/pg07codes/Desktop/fokus/src/helpers/index.js":"2","/home/pg07codes/Desktop/fokus/src/containers/App.js":"3","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskCard.js":"4","/home/pg07codes/Desktop/fokus/src/components/FocusBoard/FocussedTask.js":"5","/home/pg07codes/Desktop/fokus/src/components/customIcons/index.js":"6","/home/pg07codes/Desktop/fokus/src/containers/miscBoard/MiscBoard.js":"7","/home/pg07codes/Desktop/fokus/src/components/FocusBoard/EmptyFocusBox.js":"8","/home/pg07codes/Desktop/fokus/src/index.js":"9","/home/pg07codes/Desktop/fokus/src/containers/taskBoard/taskBoardSlice.js":"10","/home/pg07codes/Desktop/fokus/src/hooks/useTimer.js":"11","/home/pg07codes/Desktop/fokus/src/containers/taskBoard/TaskBoard.js":"12","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskLabelSelect.js":"13","/home/pg07codes/Desktop/fokus/src/containers/focusBoard/FocusBoard.js":"14","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskInput.js":"15","/home/pg07codes/Desktop/fokus/src/serviceWorker.js":"16","/home/pg07codes/Desktop/fokus/src/components/MusicBox/MusicVolumeControl.js":"17","/home/pg07codes/Desktop/fokus/src/components/MusicBox/musicUtils.js":"18","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/ProgressRings.js":"19","/home/pg07codes/Desktop/fokus/src/components/MusicBox/Soundscapes.js":"20","/home/pg07codes/Desktop/fokus/src/containers/menu/Menu.js":"21","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TimeProgressCard.js":"22","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TaskProgressCard.js":"23","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/NoTasks.js":"24","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/Divider.js":"25","/home/pg07codes/Desktop/fokus/src/components/FocusBoard/DayDate.js":"26","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/LabelPie.js":"27","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/EmptyLabelPie.js":"28","/home/pg07codes/Desktop/fokus/src/containers/MobileView/index.js":"29"},{"size":214,"mtime":1612760411462,"results":"30","hashOfConfig":"31"},{"size":1658,"mtime":1613681536034,"results":"32","hashOfConfig":"31"},{"size":848,"mtime":1613740840965,"results":"33","hashOfConfig":"31"},{"size":14357,"mtime":1613732422901,"results":"34","hashOfConfig":"31"},{"size":7804,"mtime":1613739429835,"results":"35","hashOfConfig":"31"},{"size":1839,"mtime":1613636104237,"results":"36","hashOfConfig":"31"},{"size":2943,"mtime":1613739079806,"results":"37","hashOfConfig":"31"},{"size":4703,"mtime":1613739562016,"results":"38","hashOfConfig":"31"},{"size":651,"mtime":1613628682348,"results":"39","hashOfConfig":"31"},{"size":12281,"mtime":1613674345312,"results":"40","hashOfConfig":"31"},{"size":528,"mtime":1611252515979,"results":"41","hashOfConfig":"31"},{"size":6198,"mtime":1613736651052,"results":"42","hashOfConfig":"31"},{"size":1304,"mtime":1613218352233,"results":"43","hashOfConfig":"31"},{"size":1933,"mtime":1613736667756,"results":"44","hashOfConfig":"31"},{"size":5220,"mtime":1613736612948,"results":"45","hashOfConfig":"31"},{"size":5141,"mtime":1608877484447,"results":"46","hashOfConfig":"31"},{"size":1695,"mtime":1613720752416,"results":"47","hashOfConfig":"31"},{"size":1143,"mtime":1613675294381,"results":"48","hashOfConfig":"31"},{"size":4127,"mtime":1613730906408,"results":"49","hashOfConfig":"31"},{"size":4005,"mtime":1613731848374,"results":"50","hashOfConfig":"31"},{"size":664,"mtime":1613736339048,"results":"51","hashOfConfig":"31"},{"size":2701,"mtime":1613730633856,"results":"52","hashOfConfig":"31"},{"size":1796,"mtime":1613730618061,"results":"53","hashOfConfig":"31"},{"size":973,"mtime":1613735051821,"results":"54","hashOfConfig":"31"},{"size":2621,"mtime":1613720728888,"results":"55","hashOfConfig":"31"},{"size":1285,"mtime":1613731790082,"results":"56","hashOfConfig":"31"},{"size":2820,"mtime":1613738944375,"results":"57","hashOfConfig":"31"},{"size":623,"mtime":1613738786667,"results":"58","hashOfConfig":"31"},{"size":193,"mtime":1613740833325,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"g1paqb",{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pg07codes/Desktop/fokus/src/store/index.js",[],["131","132"],"/home/pg07codes/Desktop/fokus/src/helpers/index.js",["133","134","135","136","137","138"],"export function formattedTimeString(x) {\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return `${mins}:${secs}`;\n}\n\nexport function formattedTimeStringv2(x) {\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return {mins,secs};\n}\n\nexport function getFormattedDate() {\n    let d = new Date();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return {\n        day: days[d.getDay()],\n        month: months[d.getMonth()],\n        date: d.getDate(),\n        year: d.getFullYear(),\n    };\n}\n\nexport function getFormattedListTimeSummary(x){\n    let mins = Math.floor(x % 3600 / 60);\n    let hours = Math.floor(x / 3600);\n\n    if (mins == 0) {\n        mins = `0`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n    if (hours == 0) {\n        hours = `0`;\n    } else if (hours < 10) {\n        hours = `${hours}`;\n    }\n\n    return {hours,mins};\n}\n\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\n","/home/pg07codes/Desktop/fokus/src/containers/App.js",[],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskCard.js",["139"],"/home/pg07codes/Desktop/fokus/src/components/FocusBoard/FocussedTask.js",["140","141"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nimport { toggleIsRunning, tick, updateTaskTimeByVal, resetTaskTimer, toggleSoundscapeState } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport useTimer from \"../../hooks/useTimer\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { ResetIcon } from \"./../../components/customIcons\";\nimport dingSound from \"./../../sounds/ding.mp3\";\nimport { BsFillPauseFill, BsFillPlayFill } from \"react-icons/bs\";\nimport { formattedTimeStringv2, getFormattedDate } from \"./../../helpers\";\n\nlet dingSoundElement = new Audio(dingSound);\n\nconst FocussedTaskDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    flex-direction: column;\n    background-color:#FABB18;\n    width: 100%;\n    height: 80%;\n    border-radius:20px;\n`;\n\nconst FocussedTaskPlayer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    position: relative;\n    width: 100%;\n    height: 50%;\n    border-radius: 10px;\n    /* background-color: #FABB18; */\n    /* box-shadow: 0 2px 10px rgba(166, 173, 201, 0.5);\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.5); */\n`;\n\nconst FocussedTaskContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    margin: 5px;\n    padding: 5px;\n    height: 30%;\n    width: 90%;\n    max-width: 376px;\n    border-radius: 10px;\n    word-wrap: break-word;\n    p {\n        min-width: 0;\n        font-weight: bold;\n        margin: 3px;\n    }\n    /* -webkit-box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8);\n    box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8); */\n    background-color: #fff;\n`;\n\n\nconst FocussedTaskTimer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 80%;\n    width: 50%;\n    /* background-color: #df1aa1; */\n`;\n\nconst CountdownTimerDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 85%;\n    height: 85%;\n    background-color: #fff;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    border-radius: 50%;\n    p {\n        margin: 0;\n        font-weight: bold;\n        color: ${(p) => (p.isDisabled ? \"#c1c1d7\" : \"#000\")};\n    }\n    span {\n        margin: 0 2px;\n        color: #4a4b46;\n        font-size: 0.8em;\n        font-weight: bold;\n    }\n`;\n\nconst FocussedTaskController = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 90%;\n    width: 30%;\n    /* background-color: #f1f7dd; */\n`;\n\nconst PlayPauseButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 55px;\n    height: 55px;\n    background-color: #000;\n    border-radius: 50%;\n    margin: 10px 20px;\n    svg {\n        color: #FABB18;\n        font-size: 1.8em;\n        margin-left: ${(p) => (p.isPlayBtn ? \"3px\" : \"0\")};\n    }\n    cursor: pointer;\n`;\n\nconst UpdateTimeButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    height: 30px;\n    cursor: pointer;\n`;\n\nconst ResetButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    background-color: ${(p) => (p.isDisabled ? \"#c1c1d7\" : \"#0000cd\")};\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    top: 5px;\n    left: 7px;\n    background-color: #000;\n    cursor: ${(p) => (p.isDisabled ? \"default\" : \"pointer\")};\n    svg {\n        color: #FABB18;\n        width: 20px;\n    }\n`;\n\nexport function FocussedTask() {\n    const focussedTaskIndex = useSelector((state) => state.tasks.meta.focussedTaskIndex);\n    let focussedTask = useSelector((state) => (focussedTaskIndex !== -1 ? state.tasks.taskArray[focussedTaskIndex] : null));\n    const dispatch = useDispatch();\n    const delay = 1000;\n    useTimer(\n        () => {\n            if (focussedTask === null) return;\n            else if (focussedTask.remainingTime > 0) {\n                dispatch(tick(focussedTaskIndex));\n            } else if (focussedTask.remainingTime === 0) {\n                dispatch(toggleSoundscapeState(false));\n                dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n                dingSoundElement.play();\n            }\n        },\n        focussedTask !== null && focussedTask.isRunning ? delay : null\n    );\n\n    function updateTaskTimeHandler(val) {\n        if (focussedTask.isCompleted) return;\n        if (focussedTask.isRunning) dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n        dispatch(updateTaskTimeByVal({ focussedTaskIndex, val }));\n        dispatch(toggleSoundscapeState(false));\n    }\n\n    function playPauseHandler(focussedTaskIndex, wasTaskRunning) {\n        dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n        if (wasTaskRunning) {\n            console.log(\"set to pausing sound\");\n            dispatch(toggleSoundscapeState(false));\n        } else {\n            console.log(\"set to playing sound\");\n            dispatch(toggleSoundscapeState(true));\n        }\n    }\n\n    const countdownObj = formattedTimeStringv2(focussedTask.remainingTime);\n    let countdownMins = countdownObj.mins;\n    let countdownSecs = countdownObj.secs;\n\n    return (\n        <FocussedTaskDiv>\n\n            <FocussedTaskPlayer>\n                <FocussedTaskTimer>\n                    <div style={{ width: 110, height: 110 }}>\n                        <CircularProgressbarWithChildren\n                            value={focussedTask.time !== 0 ? Math.floor((focussedTask.remainingTime / focussedTask.time) * 100) : 0}\n                            styles={buildStyles({\n                                strokeLinecap: \"butt\",\n                                pathColor: \"#020202\",\n                                trailColor: \"#F0F8FF\",\n                            })}\n                            strokeWidth={8}\n                        >\n                            <CountdownTimerDiv>\n                                <p>{countdownMins}</p>\n                                <span>m</span>\n                                <p>{countdownSecs}</p>\n                                <span>s</span>\n                            </CountdownTimerDiv>\n                        </CircularProgressbarWithChildren>\n                    </div>\n                </FocussedTaskTimer>\n\n                <FocussedTaskController>\n                    <UpdateTimeButtonDiv onClick={() => updateTaskTimeHandler(5)}>\n                        <h4>+5</h4>\n                    </UpdateTimeButtonDiv>\n                    <PlayPauseButtonDiv isPlayBtn={!focussedTask.isRunning} onClick={() => playPauseHandler(focussedTaskIndex, focussedTask.isRunning)}>\n                        {focussedTask.isRunning ? <BsFillPauseFill /> : <BsFillPlayFill />}\n                    </PlayPauseButtonDiv>\n\n                    <UpdateTimeButtonDiv onClick={() => updateTaskTimeHandler(-5)}>\n                        <h4>-5</h4>\n                    </UpdateTimeButtonDiv>\n                </FocussedTaskController>\n\n                <ResetButtonDiv\n                    onClick={() => {\n                        dispatch(toggleSoundscapeState(false));\n                        dispatch(resetTaskTimer(focussedTaskIndex));\n                    }}\n                >\n                    <ResetIcon />\n                </ResetButtonDiv>\n            </FocussedTaskPlayer>\n            <FocussedTaskContent>\n                <p>{focussedTask.content}</p>\n            </FocussedTaskContent>\n        </FocussedTaskDiv>\n    );\n}\n",["142","143"],"/home/pg07codes/Desktop/fokus/src/components/customIcons/index.js",[],"/home/pg07codes/Desktop/fokus/src/containers/miscBoard/MiscBoard.js",["144","145"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { LabelPie } from \"./../../components/MiscBoard/LabelPie\";\nimport { ProgressRings } from \"./../../components/MiscBoard/ProgressRings\";\nimport {TimeProgressCard} from \"./../../components/MiscBoard/TimeProgressCard\";\nimport {TaskProgressCard} from \"./../../components/MiscBoard/TaskProgressCard\";\n\nconst MiscBoardContainer = styled.div`\n    flex: 2 1 0;\n    min-width:396px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: center;\n`;\n\nconst LabelPieContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 50%;\n    max-width:220px;\n    height: 210px;\n    margin: 20px;\n    border-radius: 10px;\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4); */\n    background-color: #020202;\n    transition:transform 0.2s ease-in-out ;\n    &:hover {\n        transform: scale(1.02);\n    }\n`;\n\nconst MainSummaryContainer = styled.div`\n    display: flex;\n    align-items:center;\n    justify-content:space-around;\n    width: 80%;\n    max-width:400px;\n    height: 326px;\n    margin: 20px;\n    border-radius:20px;\n    backface-visibility: hidden;\n    transform: translateZ(0);\n    transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\n    &:hover {\n        transform: scale(1.02);\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n    }\n`;\n\nconst ProgressRingContainer = styled.div`\n    display: flex;\n    width: 45%;\n    height: 85%;\n    border-radius: 10px;\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    background-color: #f7f7fa; */\n`;\n\nconst ProgressCardContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    width: 35%;\n    height: 85%;\n    border-radius: 10px;\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4); */\n    /* background-color: #f7adfa; */\n`;\n\nexport function MiscBoard() {\n    return (\n        <MiscBoardContainer>\n            <MainSummaryContainer>\n                <ProgressRingContainer>\n                    <ProgressRings />\n                </ProgressRingContainer>\n                <ProgressCardContainer>\n                    <TaskProgressCard/>\n                    <TimeProgressCard/>\n                </ProgressCardContainer>\n            </MainSummaryContainer>\n\n            <LabelPieContainer>\n                <LabelPie />\n            </LabelPieContainer>\n        </MiscBoardContainer>\n    );\n}\n",["146","147"],"/home/pg07codes/Desktop/fokus/src/components/FocusBoard/EmptyFocusBox.js",["148","149","150","151","152"],"/home/pg07codes/Desktop/fokus/src/index.js",[],["153","154"],"/home/pg07codes/Desktop/fokus/src/containers/taskBoard/taskBoardSlice.js",["155","156","157","158","159"],"/home/pg07codes/Desktop/fokus/src/hooks/useTimer.js",[],"/home/pg07codes/Desktop/fokus/src/containers/taskBoard/TaskBoard.js",["160","161","162"],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskLabelSelect.js",["163"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst TaskSelectInput = styled.select`\n    font-weight: bold;\n    text-align: center;\n    border:0;\n    background-color:#fff;\n    option{\n        font-weight:bold;\n    }\n`;\n\nexport default function TaskLabel(p) {\n    const labels = useSelector((s) => s.tasks.labels);\n    const [updatedLabel, setUpdatedLabel] = useState(p.taskLabel);\n\n    return (\n        // <div style={{ height: \"100%\", width: 80 }}>\n        <TaskSelectInput\n        autoFocus\n            name=\"labels\"\n            onBlur={() => p.onBlur(p.taskId,p.taskLabel, updatedLabel)}\n            defaultValue={updatedLabel}\n            onChange={(e) => setUpdatedLabel(e.target.value)}\n            onKeyDown={(e) => (e.key === \"Enter\" ? p.onBlur(p.taskId,p.taskLabel, updatedLabel) : null)}\n        >\n            <option value=\"none\">none</option> \n            {/* keeping option:none at top makes it show up if taskLabel is null which is desired */}\n            {Object.keys(labels).map((e, idx) => (\n                <option style={{color:`${labels[e].color}`}} key={idx} value={e}>\n                    {e}\n                </option>\n            ))}\n        </TaskSelectInput>\n        // </div>\n    );\n}\n",["164","165"],"/home/pg07codes/Desktop/fokus/src/containers/focusBoard/FocusBoard.js",["166","167"],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskInput.js",[],"/home/pg07codes/Desktop/fokus/src/serviceWorker.js",[],"/home/pg07codes/Desktop/fokus/src/components/MusicBox/MusicVolumeControl.js",["168"],"/home/pg07codes/Desktop/fokus/src/components/MusicBox/musicUtils.js",[],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/ProgressRings.js",[],"/home/pg07codes/Desktop/fokus/src/components/MusicBox/Soundscapes.js",["169"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { soundOptions, generateAudioElement } from \"./musicUtils\";\nimport { changeSoundscapeTrack } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport { MusicVolumeControl } from \"./MusicVolumeControl\";\n\nconst SoundscapesContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n    transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\n    &:hover {\n        transform: scale(1.02);\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n    }\n`;\n\nconst SoundscapesDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 70%;\n    /* background-color: orange; */\n    color: #fabb18;\n    p {\n        margin: 0;\n        font-weight: bold;\n    }\n`;\n\nconst SoundOptionsDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 85%;\n    /* background-color: #f8faaa; */\n`;\n\nconst SoundOptionsInput = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    flex-direction: column;\n    /* background-color: #b16afa; */\n    height: 80%;\n    margin: 0 5px;\n    img {\n        width: 50px;\n        cursor: pointer;\n        transition: transform 0.2s;\n        &:hover {\n            transform: scale(1.1);\n        }\n    }\n    span {\n        margin: 0;\n        font-size: 0.8em;\n        font-weight: bold;\n        color: ${(p) => (p.isSelectedSound ? \"#FABB18\" : \"#c1c1d7\")};\n        cursor: pointer;\n    }\n`;\n\nconst SoundVolumeControl = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* background-color: #cad1ff; */\n    width: 90%;\n    height: 15%;\n`;\n\nexport function Soundscapes() {\n    const soundscape = useSelector((s) => s.tasks.soundscape);\n    const dispatch = useDispatch();\n\n    const [soundscapeAudioElement, setSoundscapeAudioElement] = useState(() => generateAudioElement(soundscape.track, soundscape.volume));\n\n    // ---- danger zone: don't change without full surety , this code is prone to issues ---///\n\n    useEffect(() => {\n        console.log(\"ran\");\n        soundscapeAudioElement.src = soundOptions[soundscape.track].src;\n    }, [soundscape.track, soundscapeAudioElement, soundscape.isPlaying]);\n\n    soundscapeAudioElement.volume = soundscape.volume;\n    soundscapeAudioElement.addEventListener(\"canplay\", () => {\n        if (soundscape.isPlaying) {\n            console.log(\"playing sir\");\n            soundscapeAudioElement.play();\n        } else {\n            soundscapeAudioElement.pause();\n        }\n    });\n\n    // ---- danger zone: this might be due to my lack of knowledge of useEffect or weird Audio element behaviour ---///\n\n    function isSelectedSound(track) {\n        return soundscape.track === track;\n    }\n\n    return (\n        <SoundscapesContainer>\n            <SoundscapesDiv>\n                <p>Soundscapes</p>\n                <SoundOptionsDiv>\n                    {Object.keys(soundOptions).map((i) => (\n                        <SoundOptionsInput key={i} onClick={() => dispatch(changeSoundscapeTrack(i))} isSelectedSound={isSelectedSound(i)}>\n                            <img src={soundOptions[i].img} alt={i} />\n                            <span>{soundOptions[i].label}</span>\n                        </SoundOptionsInput>\n                    ))}\n                </SoundOptionsDiv>\n            </SoundscapesDiv>\n            <SoundVolumeControl>\n                <MusicVolumeControl />\n            </SoundVolumeControl>\n        </SoundscapesContainer>\n    );\n}\n","/home/pg07codes/Desktop/fokus/src/containers/menu/Menu.js",[],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TimeProgressCard.js",[],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TaskProgressCard.js",[],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/NoTasks.js",["170"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport noTasks from \"./../../images/noTasks.svg\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst NoTasksDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n    width: ${(p)=>p.allCompleted?\"40%\":\"70%\"};\n    margin: 30px 10px;\n`;\n\nconst NoTasksIcon = styled.div`\n    img {\n        width: 90%;\n    }\n`;\n\nconst NoTasksText = styled.div`\n    p {\n        font-weight: bold;\n        margin: 0;\n        color: #c1c1d7;\n    }\n`;\n\nexport default function NoTasks({ allCompleted }) {\n    return (\n        <NoTasksDiv allCompleted={allCompleted}>\n            <NoTasksIcon data-tip=\"\" data-for=\"taskIcon\">\n                <img src={noTasks} alt={\"No Tasks\"} />\n                <ReactTooltip id=\"taskIcon\" getContent={()=>allCompleted ? \"create more tasks\" : \"create task to begin\"} />\n            </NoTasksIcon>\n        </NoTasksDiv>\n    );\n}\n","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/Divider.js",[],["171","172"],"/home/pg07codes/Desktop/fokus/src/components/FocusBoard/DayDate.js",["173"],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/LabelPie.js",[],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/EmptyLabelPie.js",["174"],"import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { ImPieChart } from \"react-icons/im\";\nimport styled from \"styled-components\";\n\nconst EmptyLabelPieDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 160px;\n    svg {\n        color: #fff;\n        font-size: 6em;\n    }\n`;\n\nexport function EmptyLabelPie() {\n    return (\n        <EmptyLabelPieDiv data-tip=\"\" data-for=\"EmptyLabelPie\">\n            <ImPieChart />\n            <ReactTooltip id=\"EmptyLabelPie\" getContent={() => \"Tasks/Labels Pie\"} />\n        </EmptyLabelPieDiv>\n    );\n}\n","/home/pg07codes/Desktop/fokus/src/containers/MobileView/index.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":5,"column":14,"nodeType":"181","messageId":"182","endLine":5,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":10,"column":14,"nodeType":"181","messageId":"182","endLine":10,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":23,"column":14,"nodeType":"181","messageId":"182","endLine":23,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":28,"column":14,"nodeType":"181","messageId":"182","endLine":28,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":53,"column":14,"nodeType":"181","messageId":"182","endLine":53,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":58,"column":15,"nodeType":"181","messageId":"182","endLine":58,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":210,"column":17,"nodeType":"185","messageId":"186","endLine":210,"endColumn":21},{"ruleId":"183","severity":1,"message":"187","line":3,"column":18,"nodeType":"185","messageId":"186","endLine":3,"endColumn":21},{"ruleId":"183","severity":1,"message":"188","line":11,"column":33,"nodeType":"185","messageId":"186","endLine":11,"endColumn":49},{"ruleId":"175","replacedBy":"189"},{"ruleId":"177","replacedBy":"190"},{"ruleId":"183","severity":1,"message":"191","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":21},{"ruleId":"183","severity":1,"message":"192","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":34},{"ruleId":"175","replacedBy":"193"},{"ruleId":"177","replacedBy":"194"},{"ruleId":"183","severity":1,"message":"191","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":21},{"ruleId":"183","severity":1,"message":"192","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":34},{"ruleId":"183","severity":1,"message":"195","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":19},{"ruleId":"183","severity":1,"message":"196","line":111,"column":7,"nodeType":"185","messageId":"186","endLine":111,"endColumn":26},{"ruleId":"183","severity":1,"message":"197","line":119,"column":7,"nodeType":"185","messageId":"186","endLine":119,"endColumn":21},{"ruleId":"175","replacedBy":"198"},{"ruleId":"177","replacedBy":"199"},{"ruleId":"179","severity":1,"message":"200","line":49,"column":52,"nodeType":"181","messageId":"182","endLine":49,"endColumn":54},{"ruleId":"179","severity":1,"message":"200","line":60,"column":64,"nodeType":"181","messageId":"182","endLine":60,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":63,"column":64,"nodeType":"181","messageId":"182","endLine":63,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":238,"column":56,"nodeType":"181","messageId":"182","endLine":238,"endColumn":58},{"ruleId":"179","severity":1,"message":"180","line":281,"column":56,"nodeType":"181","messageId":"182","endLine":281,"endColumn":58},{"ruleId":"183","severity":1,"message":"201","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"200","line":39,"column":18,"nodeType":"181","messageId":"182","endLine":39,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":47,"column":19,"nodeType":"181","messageId":"182","endLine":47,"endColumn":21},{"ruleId":"183","severity":1,"message":"192","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":34},{"ruleId":"175","replacedBy":"202"},{"ruleId":"177","replacedBy":"203"},{"ruleId":"183","severity":1,"message":"192","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":34},{"ruleId":"183","severity":1,"message":"204","line":46,"column":11,"nodeType":"185","messageId":"186","endLine":46,"endColumn":26},{"ruleId":"183","severity":1,"message":"205","line":8,"column":7,"nodeType":"185","messageId":"186","endLine":8,"endColumn":25},{"ruleId":"183","severity":1,"message":"206","line":88,"column":36,"nodeType":"185","messageId":"186","endLine":88,"endColumn":61},{"ruleId":"183","severity":1,"message":"207","line":21,"column":7,"nodeType":"185","messageId":"186","endLine":21,"endColumn":18},{"ruleId":"175","replacedBy":"208"},{"ruleId":"177","replacedBy":"209"},{"ruleId":"183","severity":1,"message":"201","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"201","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'temp' is assigned a value but never used.","Identifier","unusedVar","'css' is defined but never used.","'getFormattedDate' is defined but never used.",["210"],["211"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.",["210"],["211"],"'ResetIcon' is defined but never used.","'UpdateTimeButtonDiv' is assigned a value but never used.","'ResetButtonDiv' is assigned a value but never used.",["210"],["211"],"Expected '!==' and instead saw '!='.","'useState' is defined but never used.",["210"],["211"],"'totalTasksCount' is assigned a value but never used.","'VolumeFeedbackText' is assigned a value but never used.","'setSoundscapeAudioElement' is assigned a value but never used.","'NoTasksText' is assigned a value but never used.",["210"],["211"],"no-global-assign","no-unsafe-negation"]