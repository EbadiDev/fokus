[{"/home/pg07codes/Desktop/fokus/src/containers/notes/index.js":"1","/home/pg07codes/Desktop/fokus/src/components/notes/NoteCard.js":"2","/home/pg07codes/Desktop/fokus/src/components/notes/AddNoteButton.js":"3","/home/pg07codes/Desktop/fokus/src/components/notes/NewNoteModal.js":"4","/home/pg07codes/Desktop/fokus/src/containers/notes/notesSlice.js":"5","/home/pg07codes/Desktop/fokus/src/store/index.js":"6"},{"size":902,"mtime":1629222414747,"results":"7","hashOfConfig":"8"},{"size":368,"mtime":1629101156227,"results":"9","hashOfConfig":"8"},{"size":1139,"mtime":1629219650567,"results":"10","hashOfConfig":"8"},{"size":3693,"mtime":1629222203296,"results":"11","hashOfConfig":"8"},{"size":368,"mtime":1629222230959,"results":"12","hashOfConfig":"8"},{"size":799,"mtime":1629222272878,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g1paqb",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pg07codes/Desktop/fokus/src/containers/notes/index.js",[],"/home/pg07codes/Desktop/fokus/src/components/notes/NoteCard.js",[],"/home/pg07codes/Desktop/fokus/src/components/notes/AddNoteButton.js",[],"/home/pg07codes/Desktop/fokus/src/components/notes/NewNoteModal.js",["27"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { create } from \"./../../containers/notes/notesSlice\";\n\nimport { motion } from \"framer-motion\";\n\nconst ModalOverlay = styled.div`\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n`;\n\nconst ModalBox = styled(motion.div)`\n    position: relative;\n    z-index: 2;\n    width: 560px;\n    height: 400px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10px;\n    background: #fff;\n`;\n\nconst CloseModalButton = styled.div`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    margin: 5px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    svg {\n        color: #fabb18;\n        font-size: 1.6em;\n        font-weight: bolder;\n    }\n`;\n\nconst AddNoteInput = styled.textarea`\n    resize: none;\n    height: 75%;\n    width: 75%;\n    font-size: 1.2em;\n    vertical-align: center;\n    font-weight: bold;\n    border: none;\n    outline: none;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst AddNoteActionButton = styled.div`\n    position: absolute;\n    right: 10px;\n    bottom: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 40px;\n    width: 80px;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    color: ${(p) => p.theme.primaryText};\n    &:hover {\n        background-color: #fabb18;\n        p {\n            color: ${(p) => p.theme.secondaryText};\n        }\n    }\n    p {\n        margin: 3px;\n        font-size: 0.75em;\n    }\n`;\n\nexport default function NewNoteModal({ showModal, setShowModal }) {\n    const dispatch = useDispatch();\n    const [noteContent, setNoteContent] = useState(\"\");\n\n    const handleNoteAddAction = (noteContent) => {\n        dispatch(create(noteContent));\n        setNoteContent(\"\");\n        setShowModal(false);\n    };\n    return (\n        <>\n            {showModal && (\n                <ModalOverlay>\n                    <AnimatePresence>\n                        {showModal && (\n                            <ModalBox\n                                initial={{ opacity: 0, y: 60, scale: 0.5 }}\n                                animate={{\n                                    opacity: 1,\n                                    y: 0,\n                                    scale: 1,\n                                    transition: { type: \"spring\", stiffness: 300 },\n                                }}\n                                exit={{ opacity: 0, scale: 0.5, transition: { duration: 0.6 } }}\n                            >\n                                <CloseModalButton onClick={() => setShowModal(false)}>\n                                    <AiOutlineClose />\n                                </CloseModalButton>\n                                <AddNoteInput type=\"text\" autoFocus value={noteContent} onChange={(e) => setNoteContent(e.target.value)} />\n                                <AddNoteActionButton onClick={() => handleNoteAddAction(noteContent)}>\n                                    <p>Add Note</p>\n                                </AddNoteActionButton>\n                            </ModalBox>\n                        )}\n                    </AnimatePresence>\n                </ModalOverlay>\n            )}\n        </>\n    );\n}\n","/home/pg07codes/Desktop/fokus/src/containers/notes/notesSlice.js",[],"/home/pg07codes/Desktop/fokus/src/store/index.js",["28","29"],{"ruleId":"30","severity":1,"message":"31","line":2,"column":23,"nodeType":"32","messageId":"33","endLine":2,"endColumn":34},{"ruleId":"30","severity":1,"message":"34","line":5,"column":36,"nodeType":"32","messageId":"33","endLine":5,"endColumn":58},{"ruleId":"30","severity":1,"message":"35","line":6,"column":10,"nodeType":"32","messageId":"33","endLine":6,"endColumn":18},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'setStateInLocalStorage' is defined but never used.","'debounce' is defined but never used."]