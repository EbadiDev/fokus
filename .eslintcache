[{"/home/pg07codes/Desktop/fokus/src/components/FocusBoard/EmptyFocusBox.js":"1","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/EmptyLabelPie.js":"2","/home/pg07codes/Desktop/fokus/src/containers/focusBoard/FocusBoard.js":"3","/home/pg07codes/Desktop/fokus/src/hooks/useTimer.js":"4","/home/pg07codes/Desktop/fokus/src/components/MusicBox/Soundscapes.js":"5","/home/pg07codes/Desktop/fokus/src/components/MusicBox/MusicVolumeControl.js":"6","/home/pg07codes/Desktop/fokus/src/containers/settings/index.js":"7","/home/pg07codes/Desktop/fokus/src/containers/settings/DarkModeToggle.js":"8","/home/pg07codes/Desktop/fokus/src/index.js":"9","/home/pg07codes/Desktop/fokus/src/containers/dashboard/index.js":"10","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskInput.js":"11","/home/pg07codes/Desktop/fokus/src/containers/dashboard/DashboardMain.js":"12","/home/pg07codes/Desktop/fokus/src/containers/miscBoard/MiscBoard.js":"13","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/ProgressRings.js":"14","/home/pg07codes/Desktop/fokus/src/components/customIcons/index.js":"15","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskCard.js":"16","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TaskProgressCard.js":"17","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TimeProgressCard.js":"18","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/Divider.js":"19","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/NoTasks.js":"20","/home/pg07codes/Desktop/fokus/src/helpers/index.js":"21","/home/pg07codes/Desktop/fokus/src/containers/dashboard/DashboardHero.js":"22","/home/pg07codes/Desktop/fokus/src/components/dashBoard/DayDate.js":"23","/home/pg07codes/Desktop/fokus/src/components/FocusBoard/FocussedTask.js":"24","/home/pg07codes/Desktop/fokus/src/containers/mobileView/index.js":"25"},{"size":6227,"mtime":1614606524152,"results":"26","hashOfConfig":"27"},{"size":660,"mtime":1614605914503,"results":"28","hashOfConfig":"27"},{"size":2071,"mtime":1614664022116,"results":"29","hashOfConfig":"27"},{"size":1541,"mtime":1614063953152,"results":"30","hashOfConfig":"27"},{"size":3943,"mtime":1614602876713,"results":"31","hashOfConfig":"27"},{"size":1799,"mtime":1614337826301,"results":"32","hashOfConfig":"27"},{"size":834,"mtime":1614608352036,"results":"33","hashOfConfig":"27"},{"size":582,"mtime":1614608871594,"results":"34","hashOfConfig":"27"},{"size":651,"mtime":1613628682348,"results":"35","hashOfConfig":"27"},{"size":628,"mtime":1614412411656,"results":"36","hashOfConfig":"27"},{"size":5232,"mtime":1614323717153,"results":"37","hashOfConfig":"27"},{"size":521,"mtime":1614522069095,"results":"38","hashOfConfig":"27"},{"size":4554,"mtime":1614665341504,"results":"39","hashOfConfig":"27"},{"size":4184,"mtime":1614602766052,"results":"40","hashOfConfig":"27"},{"size":1839,"mtime":1613636104237,"results":"41","hashOfConfig":"27"},{"size":14037,"mtime":1614617914160,"results":"42","hashOfConfig":"27"},{"size":2082,"mtime":1614618029450,"results":"43","hashOfConfig":"27"},{"size":3070,"mtime":1614618101852,"results":"44","hashOfConfig":"27"},{"size":2621,"mtime":1613720728888,"results":"45","hashOfConfig":"27"},{"size":853,"mtime":1614522470707,"results":"46","hashOfConfig":"27"},{"size":2025,"mtime":1614666838460,"results":"47","hashOfConfig":"27"},{"size":1001,"mtime":1614665363424,"results":"48","hashOfConfig":"27"},{"size":1408,"mtime":1614678938869,"results":"49","hashOfConfig":"27"},{"size":9010,"mtime":1614669264622,"results":"50","hashOfConfig":"27"},{"size":193,"mtime":1613740833325,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g1paqb",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pg07codes/Desktop/fokus/src/components/FocusBoard/EmptyFocusBox.js",[],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/EmptyLabelPie.js",[],"/home/pg07codes/Desktop/fokus/src/containers/focusBoard/FocusBoard.js",["109"],"/home/pg07codes/Desktop/fokus/src/hooks/useTimer.js",[],"/home/pg07codes/Desktop/fokus/src/components/MusicBox/Soundscapes.js",["110"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { soundOptions, generateAudioElement } from \"./musicUtils\";\nimport { changeSoundscapeTrack } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport { MusicVolumeControl } from \"./MusicVolumeControl\";\n\nconst SoundscapesContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    /* transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\n    &:hover {\n        transform: scale(1.02);\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n    } */\n`;\n\nconst SoundscapesDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 70%;\n    /* background-color: orange; */\n    color: #fabb18;\n    p {\n        margin: 0;\n        font-weight: bold;\n    }\n`;\n\nconst SoundOptionsDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 85%;\n    /* background-color: #f8faaa; */\n`;\n\nconst SoundOptionsInput = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    flex-direction: column;\n    /* background-color: #b16afa; */\n    height: 80%;\n    margin: 0 5px;\n    img {\n        width: 40px;\n        cursor: pointer;\n        transition: transform 0.2s;\n        &:hover {\n            transform: scale(1.3);\n        }\n    }\n    span {\n        margin: 0;\n        font-size: 0.8em;\n        font-weight: bold;\n        color: ${(p) => (p.isSelectedSound ? \"#FABB18\" : \"#4a4b46\")};\n        cursor: pointer;\n    }\n`;\n\nconst SoundVolumeControl = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* background-color: #cad1ff; */\n    width: 90%;\n    height: 15%;\n`;\n\nexport function Soundscapes() {\n    const soundscape = useSelector((s) => s.tasks.soundscape);\n    const dispatch = useDispatch();\n\n    const [soundscapeAudioElement, setSoundscapeAudioElement] = useState(() => generateAudioElement(soundscape.track, soundscape.volume));\n\n    // ---- danger zone: don't change without full surety , this code is prone to issues ---///\n\n    useEffect(() => {\n        soundscapeAudioElement.src = soundOptions[soundscape.track].src;\n    }, [soundscape.track, soundscapeAudioElement, soundscape.isPlaying]);\n\n    soundscapeAudioElement.volume = soundscape.volume;\n    soundscapeAudioElement.addEventListener(\"canplay\", () => {\n        if (soundscape.isPlaying) {\n            soundscapeAudioElement.play();\n        } else {\n            soundscapeAudioElement.pause();\n        }\n    });\n\n    // ---- danger zone: this might be due to my lack of knowledge of useEffect or weird Audio element behaviour ---///\n\n    function isSelectedSound(track) {\n        return soundscape.track === track;\n    }\n\n    return (\n        <SoundscapesContainer>\n            <SoundscapesDiv>\n                <p>Soundscapes</p>\n                <SoundOptionsDiv>\n                    {Object.keys(soundOptions).map((i) => (\n                        <SoundOptionsInput key={i} onClick={() => dispatch(changeSoundscapeTrack(i))} isSelectedSound={isSelectedSound(i)}>\n                            <img src={soundOptions[i].img} alt={i} />\n                            <span>{soundOptions[i].label}</span>\n                        </SoundOptionsInput>\n                    ))}\n                </SoundOptionsDiv>\n            </SoundscapesDiv>\n            <SoundVolumeControl>\n                <MusicVolumeControl />\n            </SoundVolumeControl>\n        </SoundscapesContainer>\n    );\n}\n",["111","112"],"/home/pg07codes/Desktop/fokus/src/components/MusicBox/MusicVolumeControl.js",["113"],"/home/pg07codes/Desktop/fokus/src/containers/settings/index.js",[],"/home/pg07codes/Desktop/fokus/src/containers/settings/DarkModeToggle.js",[],["114","115"],"/home/pg07codes/Desktop/fokus/src/index.js",[],["116","117"],"/home/pg07codes/Desktop/fokus/src/containers/dashboard/index.js",[],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskInput.js",[],"/home/pg07codes/Desktop/fokus/src/containers/dashboard/DashboardMain.js",[],"/home/pg07codes/Desktop/fokus/src/containers/miscBoard/MiscBoard.js",["118","119"],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/ProgressRings.js",[],"/home/pg07codes/Desktop/fokus/src/components/customIcons/index.js",[],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/TaskCard.js",[],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TaskProgressCard.js",[],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TimeProgressCard.js",[],["120","121"],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/Divider.js",[],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/NoTasks.js",[],"/home/pg07codes/Desktop/fokus/src/helpers/index.js",["122","123","124","125","126","127","128","129","130","131","132","133"],"export function formattedTimeString(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return `${mins}:${secs}`;\n}\n\nexport function formattedTimeStringv2(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return { mins, secs };\n}\n\nexport function getFormattedDate() {\n    let d = new Date();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return {\n        day: days[d.getDay()],\n        month: months[d.getMonth()],\n        date: d.getDate(),\n        year: d.getFullYear(),\n    };\n}\n\nexport function getFormattedListTimeSummary(x) {\n    x = Math.floor(x / 1000);\n    let mins = Math.floor((x % 3600) / 60);\n    let hours = Math.floor(x / 3600);\n\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n    if (hours == 0) {\n        hours = `0`;\n    } else if (hours < 10) {\n        hours = `${hours}`;\n    }\n\n    return { hours, mins };\n}\n\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\n\nexport function getOrdinalSuffix(i) {\n    let j = i % 10,\n        k = i % 100;\n    if (j == 1 && k != 11) {\n        return \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return \"rd\";\n    }\n    return \"th\";\n}\n","/home/pg07codes/Desktop/fokus/src/containers/dashboard/DashboardHero.js",[],"/home/pg07codes/Desktop/fokus/src/components/dashBoard/DayDate.js",["134"],"/home/pg07codes/Desktop/fokus/src/components/FocusBoard/FocussedTask.js",["135"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { toggleIsRunning, tick, updateTaskTimeByVal, resetTaskTimer, toggleSoundscapeState } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport useTimer, { useTimer2 } from \"../../hooks/useTimer\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { ResetIcon } from \"./../../components/customIcons\";\nimport dingSound from \"./../../sounds/ding.mp3\";\nimport { BsFillPauseFill, BsFillPlayFill } from \"react-icons/bs\";\nimport { formattedTimeStringv2 } from \"./../../helpers\";\nimport { MIN_TO_MS } from \"../../helpers/constants\";\n\nlet dingSoundElement = new Audio(dingSound);\n\nconst FocussedTaskDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    position: relative;\n    background-color: #fabb18;\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n`;\n\nconst FocussedTaskPlayer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 55%;\n    /* background-color: red; */\n`;\n\nconst FocussedTaskContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    padding: 5px;\n    height: 30%;\n    width: 90%;\n    max-width: 376px;\n    border-radius: 10px;\n    border: 3px solid black;\n    word-wrap: break-word;\n    text-shadow: 0 0 4px rgb(248, 185, 23, 0.4);\n    p {\n        min-width: 0;\n        font-weight: bold;\n        margin: 3px;\n    }\n    position: relative;\n    /* -webkit-box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8);\n    box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8); */\n    background-color: #fff;\n`;\n\nconst TotalTaskTimeBadge = styled.div`\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    color: #fff;\n    border-radius: 3px;\n    p {\n        font-size: 0.7em;\n        margin: 3px 5px;\n    }\n    background-color: #000;\n    position: absolute;\n    top: 3px;\n    right: 3px;\n`;\n\nconst FocussedTaskTimer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 80%;\n    width: 50%;\n    /* background-color: #df1aa1; */\n`;\n\nconst CountdownTimerDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 85%;\n    height: 85%;\n    background-color: #fff;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    border-radius: 50%;\n    font-weight: bold;\n    p {\n        margin: 0;\n        font-size: 0.9em;\n        color: ${(p) => (p.isDisabled ? \"#c1c1d7\" : \"#000\")};\n    }\n    span {\n        margin: 0 2px;\n        color: #4a4b46;\n        font-size: 0.7em;\n    }\n`;\n\nconst FocussedTaskController = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 90%;\n    width: 30%;\n    /* background-color: #f1f7dd; */\n`;\n\nconst PlayPauseButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    background-color: #000;\n    border-radius: 50%;\n    margin: 10px 20px;\n    svg {\n        color: #fabb18;\n        font-size: 1.5em;\n        margin-left: ${(p) => (p.isPlayBtn ? \"3px\" : \"0\")};\n    }\n    cursor: pointer;\n`;\n\nconst UpdateTimeButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 25px;\n    height: 25px;\n    cursor: ${(p) => (p.isDisabled ? \"default\" : \"pointer\")};\n    color: ${(p) => (p.isDisabled ? \"#777672\" : \"#000\")};\n`;\n\nconst ResetButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    top: 7px;\n    left: 7px;\n    background-color: #000;\n    svg {\n        color: #fabb18;\n        width: 20px;\n    }\n`;\n\nexport function FocussedTask() {\n    const focussedTaskIndex = useSelector((state) => state.tasks.meta.focussedTaskIndex);\n    let focussedTask = useSelector((state) => (focussedTaskIndex !== -1 ? state.tasks.taskArray[focussedTaskIndex] : null));\n    const dispatch = useDispatch();\n    const delay = 1010; // to account for the delay in executing code.\n    // useTimer(\n    //     () => {\n    //         if (focussedTask === null) return;\n    //         else if (focussedTask.remainingTime > 0) {\n    //             dispatch(tick(focussedTaskIndex));\n    //         } else if (focussedTask.remainingTime === 0) {\n    //             dispatch(toggleSoundscapeState(false));\n    //             dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n    //             dingSoundElement.play();\n    //         }\n    //     },\n    //     focussedTask !== null && focussedTask.isRunning ? delay : null\n    // );\n    useTimer2(\n        (deltaMS) => {\n            if (focussedTask === null) return;\n            else if (focussedTask.remainingTime > 0) {\n                dispatch(tick({ focussedTaskIndex, deltaMS }));\n            } else if (focussedTask.remainingTime === 0) {\n                dispatch(toggleSoundscapeState(false));\n                dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n                dingSoundElement.play();\n            }\n        },\n        focussedTask !== null && focussedTask.isRunning ? delay : null\n    );\n\n    function updateTaskTimeHandler(val) {\n        if (focussedTask.time + val * MIN_TO_MS <= 0) return;\n        if (focussedTask.time + val * MIN_TO_MS >= 120 * MIN_TO_MS) return;\n        if (focussedTask.isRunning) dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n        dispatch(updateTaskTimeByVal({ focussedTaskIndex, val }));\n        dispatch(toggleSoundscapeState(false));\n    }\n\n    function playPauseHandler(focussedTaskIndex, wasTaskRunning) {\n        dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n        if (wasTaskRunning) {\n            dispatch(toggleSoundscapeState(false));\n        } else {\n            dispatch(toggleSoundscapeState(true));\n        }\n    }\n\n    const countdownObj = formattedTimeStringv2(focussedTask.remainingTime);\n    let countdownMins = countdownObj.mins;\n    let countdownSecs = countdownObj.secs;\n\n    const totalTaskTimeObj = formattedTimeStringv2(focussedTask.time);\n    let totalTaskMins = totalTaskTimeObj.mins;\n\n    return (\n        <FocussedTaskDiv>\n            <FocussedTaskPlayer>\n                <FocussedTaskTimer>\n                    <div style={{ width: 100, height: 100 }}>\n                        <CircularProgressbarWithChildren\n                            value={focussedTask.time !== 0 ? Math.floor((focussedTask.remainingTime / focussedTask.time) * 100) : 0}\n                            styles={buildStyles({\n                                strokeLinecap: \"butt\",\n                                pathColor: \"#020202\",\n                                trailColor: \"#F0F8FF\",\n                            })}\n                            strokeWidth={8}\n                        >\n                            <CountdownTimerDiv>\n                                <p>{countdownMins}</p>\n                                <span>m</span>\n                                <p>{countdownSecs}</p>\n                                <span>s</span>\n                            </CountdownTimerDiv>\n                        </CircularProgressbarWithChildren>\n                    </div>\n                </FocussedTaskTimer>\n\n                <FocussedTaskController>\n                    <UpdateTimeButtonDiv isDisabled={focussedTask.time + 5 * MIN_TO_MS >= 120 * MIN_TO_MS} onClick={() => updateTaskTimeHandler(5)}>\n                        <h4>+5</h4>\n                    </UpdateTimeButtonDiv>\n                    <PlayPauseButtonDiv isPlayBtn={!focussedTask.isRunning} onClick={() => playPauseHandler(focussedTaskIndex, focussedTask.isRunning)}>\n                        {focussedTask.isRunning ? <BsFillPauseFill /> : <BsFillPlayFill />}\n                    </PlayPauseButtonDiv>\n\n                    <UpdateTimeButtonDiv isDisabled={focussedTask.time - 5 * MIN_TO_MS <= 0} onClick={() => updateTaskTimeHandler(-5)}>\n                        <h4>-5</h4>\n                    </UpdateTimeButtonDiv>\n                </FocussedTaskController>\n\n                <ResetButtonDiv\n                    onClick={() => {\n                        dispatch(toggleSoundscapeState(false));\n                        dispatch(resetTaskTimer(focussedTaskIndex));\n                    }}\n                >\n                    <ResetIcon />\n                </ResetButtonDiv>\n            </FocussedTaskPlayer>\n            <FocussedTaskContent>\n                <p>{focussedTask.content}</p>\n                <TotalTaskTimeBadge>\n                    <p>{totalTaskMins} m</p>\n                </TotalTaskTimeBadge>\n            </FocussedTaskContent>\n        </FocussedTaskDiv>\n    );\n}\n","/home/pg07codes/Desktop/fokus/src/containers/mobileView/index.js",[],{"ruleId":"136","severity":1,"message":"137","line":2,"column":23,"nodeType":"138","messageId":"139","endLine":2,"endColumn":34},{"ruleId":"136","severity":1,"message":"140","line":88,"column":36,"nodeType":"138","messageId":"139","endLine":88,"endColumn":61},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"136","severity":1,"message":"145","line":8,"column":7,"nodeType":"138","messageId":"139","endLine":8,"endColumn":25},{"ruleId":"141","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"141","replacedBy":"148"},{"ruleId":"143","replacedBy":"149"},{"ruleId":"136","severity":1,"message":"150","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":2,"column":23,"nodeType":"138","messageId":"139","endLine":2,"endColumn":34},{"ruleId":"141","replacedBy":"151"},{"ruleId":"143","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":6,"column":14,"nodeType":"155","messageId":"156","endLine":6,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":11,"column":14,"nodeType":"155","messageId":"156","endLine":11,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":25,"column":14,"nodeType":"155","messageId":"156","endLine":25,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":30,"column":14,"nodeType":"155","messageId":"156","endLine":30,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":56,"column":14,"nodeType":"155","messageId":"156","endLine":56,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":61,"column":15,"nodeType":"155","messageId":"156","endLine":61,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":81,"column":11,"nodeType":"155","messageId":"156","endLine":81,"endColumn":13},{"ruleId":"153","severity":1,"message":"157","line":81,"column":21,"nodeType":"155","messageId":"156","endLine":81,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":84,"column":11,"nodeType":"155","messageId":"156","endLine":84,"endColumn":13},{"ruleId":"153","severity":1,"message":"157","line":84,"column":21,"nodeType":"155","messageId":"156","endLine":84,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":87,"column":11,"nodeType":"155","messageId":"156","endLine":87,"endColumn":13},{"ruleId":"153","severity":1,"message":"157","line":87,"column":21,"nodeType":"155","messageId":"156","endLine":87,"endColumn":23},{"ruleId":"136","severity":1,"message":"158","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"159","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'setSoundscapeAudioElement' is assigned a value but never used.","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'VolumeFeedbackText' is assigned a value but never used.",["160"],["161"],["160"],["161"],"'useSelector' is defined but never used.",["160"],["161"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'useTimer' is defined but never used.","no-global-assign","no-unsafe-negation"]