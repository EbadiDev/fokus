[{"/home/pg07codes/Desktop/fokus/src/components/notes/NotesPreview.js":"1","/home/pg07codes/Desktop/fokus/src/components/notes/NotesListArea.js":"2","/home/pg07codes/Desktop/fokus/src/containers/notes/notesSlice.js":"3","/home/pg07codes/Desktop/fokus/src/components/notes/NoteModal.js":"4","/home/pg07codes/Desktop/fokus/src/serviceWorker.js":"5","/home/pg07codes/Desktop/fokus/src/containers/App.js":"6","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/Divider.js":"7","/home/pg07codes/Desktop/fokus/src/components/TaskBoard/NoTasks.js":"8","/home/pg07codes/Desktop/fokus/src/containers/settings/DefaultTaskTime.js":"9","/home/pg07codes/Desktop/fokus/src/containers/settings/AutoMarkDone.js":"10","/home/pg07codes/Desktop/fokus/src/components/dashBoard/DayDate.js":"11","/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TaskProgressCard.js":"12","/home/pg07codes/Desktop/fokus/src/components/MusicBox/musicUtils.js":"13"},{"size":5555,"mtime":1629491888799,"results":"14","hashOfConfig":"15"},{"size":1205,"mtime":1629488386949,"results":"16","hashOfConfig":"15"},{"size":1306,"mtime":1629491206040,"results":"17","hashOfConfig":"15"},{"size":6110,"mtime":1629491566185,"results":"18","hashOfConfig":"15"},{"size":5141,"mtime":1608877484447,"results":"19","hashOfConfig":"15"},{"size":2003,"mtime":1629096437185,"results":"20","hashOfConfig":"15"},{"size":2654,"mtime":1614848772892,"results":"21","hashOfConfig":"15"},{"size":687,"mtime":1614690761432,"results":"22","hashOfConfig":"15"},{"size":2216,"mtime":1615050262617,"results":"23","hashOfConfig":"15"},{"size":1025,"mtime":1615050268205,"results":"24","hashOfConfig":"15"},{"size":1429,"mtime":1616211456697,"results":"25","hashOfConfig":"15"},{"size":2050,"mtime":1615028874437,"results":"26","hashOfConfig":"15"},{"size":1285,"mtime":1615025359945,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"g1paqb",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pg07codes/Desktop/fokus/src/components/notes/NotesPreview.js",["56","57"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { colorOptions, create, update, remove } from \"../../containers/notes/notesSlice\";\nimport { motion } from \"framer-motion\";\nimport ReactMarkdown from \"react-markdown\";\nimport { VscMarkdown } from \"react-icons/vsc\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { debounce } from \"./../../helpers\";\nimport { BiTrash } from \"react-icons/bi\";\n\nconst NotesPreviewContainer = styled(motion.div)`\n    display: flex;\n    flex-direction: column;\n    flex: 0 1 0;\n    position: relative;\n    border-left: solid 2px #fabb18;\n`;\n\nconst NoteActionMenu = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: grey;\n`;\n\nconst NoteContentDiv = styled.div`\n    width: 100%;\n    height: 95%;\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    background-color: #fff;\n`;\n\nconst EditNoteInput = styled.textarea`\n    resize: none;\n    height: 100%;\n    padding: 20px 0 0 25px;\n    font-size: 1em;\n    font-family: monospace;\n    vertical-align: center;\n    border: none;\n    outline: none;\n    color: ${(p) => p.theme.primaryText};\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst MenuActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    svg {\n        color: ${(p) => p.theme.primaryText};\n        font-size: 1.6em;\n        font-weight: 900;\n    }\n`;\n\nconst NoteColorSelectionBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 8px;\n    height: 40px;\n    width: 220px;\n    margin: 4px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    background-color: #e6e6e6;\n`;\n\nconst ColorOption = styled.div`\n    display: inline-block;\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background-color: ${(p) => p.color};\n    background-clip: content-box;\n    padding: 2px;\n    margin: 0 3px;\n    border: ${(p) => (p.isSelected ? \"3px solid black\" : \"\")};\n`;\n\nconst debouncedUpdateNoteContent = debounce((dispatch, id, updatedNoteContent) => {\n    dispatch(update({ id: id, noteContent: updatedNoteContent }));\n}, 600);\n\nexport default function NotesPreview({ note, setNoteInPreview }) {\n    const dispatch = useDispatch();\n    const [editNote, setEditNote] = useState(true);\n    const [noteContent, setNoteContent] = useState();\n    const [noteColor, setNoteColor] = useState();\n\n    useEffect(() => {\n        if (note != null) {\n            setNoteContent(note.content);\n            setNoteColor(note.color);\n            setEditNote(false);\n        }\n    }, [note]);\n\n    const handleContentChange = (updatedNoteContent) => {\n        setNoteContent(updatedNoteContent);\n        debouncedUpdateNoteContent(dispatch, note.id, updatedNoteContent);\n    };\n\n    const handleColorUpdate = (note, noteColor) => {\n        let updatePayload = {\n            id: note.id,\n            noteColor,\n        };\n        dispatch(update(updatePayload));\n        setNoteColor(noteColor);\n    };\n\n    const handleDeleteNoteAction = (id) => {\n        dispatch(remove(id));\n        setNoteInPreview(null);\n    };\n\n    return (\n        <AnimatePresence>\n            <NotesPreviewContainer\n                initial={{\n                    flex: note === null ? \"0 1 0\" : \"2 1 0\",\n                }}\n                animate={{\n                    flex: note === null ? \"0 1 0\" : \"2 1 0\",\n                }}\n            >\n                {note != null && (\n                    <>\n                        <NoteActionMenu>\n                            <MenuActionButton onClick={() => setEditNote(!editNote)}>{editNote ? <VscMarkdown /> : <FiEdit />}</MenuActionButton>\n                            <NoteColorSelectionBox>\n                                {Object.keys(colorOptions).map((color) => (\n                                    <ColorOption\n                                        onClick={() => handleColorUpdate(note, colorOptions[color])}\n                                        isSelected={noteColor === colorOptions[color]}\n                                        color={colorOptions[color]}\n                                    />\n                                ))}\n                            </NoteColorSelectionBox>\n                            <MenuActionButton onClick={() => handleDeleteNoteAction(note.id)}>\n                                <BiTrash />\n                            </MenuActionButton>\n                            <MenuActionButton onClick={() => setNoteInPreview(null)}>\n                                <AiOutlineClose />\n                            </MenuActionButton>\n                        </NoteActionMenu>\n                        <NoteContentDiv>\n                            {editNote ? (\n                                <EditNoteInput type=\"text\" value={noteContent} onChange={(e) => handleContentChange(e.target.value)} />\n                            ) : (\n                                <div style={{ padding: \"20px 0 0 25px\" }}>\n                                    <ReactMarkdown>{noteContent}</ReactMarkdown>\n                                </div>\n                            )}\n                        </NoteContentDiv>\n                    </>\n                )}\n            </NotesPreviewContainer>\n        </AnimatePresence>\n    );\n}\n",["58","59"],"/home/pg07codes/Desktop/fokus/src/components/notes/NotesListArea.js",["60"],"/home/pg07codes/Desktop/fokus/src/containers/notes/notesSlice.js",[],"/home/pg07codes/Desktop/fokus/src/components/notes/NoteModal.js",[],"/home/pg07codes/Desktop/fokus/src/serviceWorker.js",[],"/home/pg07codes/Desktop/fokus/src/containers/App.js",[],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/Divider.js",[],"/home/pg07codes/Desktop/fokus/src/components/TaskBoard/NoTasks.js",[],"/home/pg07codes/Desktop/fokus/src/containers/settings/DefaultTaskTime.js",[],"/home/pg07codes/Desktop/fokus/src/containers/settings/AutoMarkDone.js",[],"/home/pg07codes/Desktop/fokus/src/components/dashBoard/DayDate.js",["61"],"/home/pg07codes/Desktop/fokus/src/components/MiscBoard/TaskProgressCard.js",[],"/home/pg07codes/Desktop/fokus/src/components/MusicBox/musicUtils.js",[],{"ruleId":"62","severity":1,"message":"63","line":2,"column":23,"nodeType":"64","messageId":"65","endLine":2,"endColumn":34},{"ruleId":"62","severity":1,"message":"66","line":6,"column":24,"nodeType":"64","messageId":"65","endLine":6,"endColumn":30},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"62","severity":1,"message":"71","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"71","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'create' is defined but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]