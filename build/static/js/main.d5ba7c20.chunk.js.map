{"version":3,"sources":["images/logo.svg","images/namedLogoDark.svg","containers/menu/Menu.js","images/betaLogoLight.svg","images/betaLogoDark.svg","helpers/index.js","components/dashBoard/DayDate.js","containers/dashboard/DashboardHero.js","helpers/constants.js","containers/taskBoard/taskBoardSlice.js","hooks/useTimer.js","components/customIcons/index.js","sounds/ding.mp3","components/FocusBoard/FocussedTask.js","components/FocusBoard/EmptyFocusBox.js","sounds/bell.mp3","sounds/piano.mp3","sounds/river.mp3","sounds/forest.mp3","sounds/calm.mp3","sounds/mute.mp3","images/bell.svg","images/piano.svg","images/calm.svg","images/river.svg","images/forest.svg","components/MusicBox/musicUtils.js","components/MusicBox/MusicVolumeControl.js","components/MusicBox/Soundscapes.js","containers/focusBoard/FocusBoard.js","components/MiscBoard/EmptyLabelPie.js","components/MiscBoard/LabelPie.js","components/MiscBoard/ProgressRings.js","components/MiscBoard/TimeProgressCard.js","components/MiscBoard/TaskProgressCard.js","helpers/quotes.js","containers/miscBoard/MiscBoard.js","containers/dashboard/DashboardMain.js","containers/dashboard/index.js","images/bulb.svg","images/glowBulb.svg","images/tickmark.svg","components/TaskBoard/TaskLabelSelect.js","components/TaskBoard/TaskCard.js","components/TaskBoard/TaskFeedback.js","components/TaskBoard/TaskInput.js","components/TaskBoard/Divider.js","images/noTasks.svg","components/TaskBoard/NoTasks.js","containers/taskBoard/TaskBoard.js","containers/mobileView/index.js","containers/settings/settingsSlice.js","containers/settings/DarkThemeToggle.js","containers/settings/DefaultTaskTime.js","containers/settings/DefaultTaskLabel.js","containers/settings/index.js","helpers/themeStyles.js","containers/App.js","store/index.js","serviceWorker.js","index.js"],"names":["MenuContainer","styled","div","AppLogoContainer","AppTextLogoContainer","activeClassName","MenuOptions","NavLink","attrs","DummyMenuOptions","Menu","src","logo","alt","exact","to","data-tip","data-for","id","getContent","namedLogoLight","formattedTimeString","x","secs","Math","floor","mins","formattedTimeStringv2","getFormattedListTimeSummary","hours","debounce","fn","wait","t","clearTimeout","setTimeout","apply","arguments","getOrdinalSuffix","i","j","k","DayDateDiv","CalendarIconDiv","DayDateText","p","theme","primaryText","DayDate","DateObj","d","Date","day","getDay","month","getMonth","date","getDate","year","getFullYear","getFormattedDate","DashboardHeroContainer","DashboardHeroDiv","DashboardHero","darkTheme","useSelector","s","settings","betaLogoDark","betaLogoLight","MIN_TO_MS","tasksSlice","createSlice","name","initialState","taskArray","labels","work","color","count","personal","fitness","metime","explore","soundscape","track","isPlaying","volume","meta","globalKey","completedTaskStartIndex","focussedTaskIndex","showCompletedTasks","completedTasksCount","totalTaskListTime","remainingTaskListTime","reducers","create","tasks","payload","time","remainingTime","unshift","remove","filter","isCompleted","length","updateTaskContent","forEach","content","updatedTaskContent","updateTaskLabel","label","updateTaskTime","updatedTime","updateTaskTimeByVal","val","updateOrder","focusOnTask","index","lowest","Number","POSITIVE_INFINITY","highest","NEGATIVE_INFINITY","resetFocussedTask","tick","deltaMS","resetTaskTimer","isRunning","toggleIsRunning","undefined","idx","toggleShowCompletedTasks","toggleIsCompleted","clearCompletedTasks","updateLabelCount","oldLabel","newLabel","incrementGlobalKey","rearrange","markedAsComplete","found","temp","task","pos","push","splice","changeSoundscapeTrack","toggleSoundscapeState","updateSoundscapeVolume","actions","absoluteSetInterval","handler","delay","baseTime","now","setInterval","timePassedSinceLastCall","console","log","ResetIcon","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","SummaryCardTick","fillRule","clipRule","SummaryCardClock","DragIcon","dingSoundElement","Audio","dingSound","FocussedTaskDiv","FocussedTaskPlayer","FocussedTaskContent","backgroundSecondary","TotalTaskTimeBadge","secondaryText","FocussedTaskTimer","CountdownTimerDiv","type","FocussedTaskController","PlayPauseButtonDiv","isPlayBtn","TaskCompletedDiv","UpdateTimeButtonDiv","isDisabled","ResetButtonDiv","FocussedTask","state","focussedTask","dispatch","useDispatch","updateTaskTimeHandler","callback","savedCallback","useRef","useEffect","current","clearInterval","useTimer2","play","countdownObj","countdownMins","countdownSecs","totalTaskMins","style","width","height","value","styles","buildStyles","pathColor","trailColor","onClick","wasTaskRunning","playPauseHandler","HelpPickTaskContainer","HelpPickTaskLabel","HelpPickTaskButtonBox","HelpPickTaskButton","highlight","EmptyFocusBox","noTasks","noChoice","muteOption","mute","img","soundOptions","calm","ImgCalm","forest","ImgForest","piano","ImgPiano","river","ImgRiver","bell","ImgBell","MusicVolumeControl","ssVolume","useState","setVolume","debouncedUpdateSoundscapeVolume","vol","axis","xstep","xmin","xmax","disabled","onChange","backgroundColor","cursor","active","thumb","opacity","SoundscapesContainer","SoundscapesDiv","SoundscapesHeader","SoundOptionsDiv","SoundOptionsInput","isSelectedSound","SoundVolumeControl","Soundscapes","trackname","audioElement","loop","generateAudioElement","soundscapeAudioElement","pause","addEventListener","Object","keys","map","FocusBoardContainer","FocussedTaskContainer","MusicBoxContainer","FocusBoard","EmptyLabelPieDiv","EmptyLabelPie","LabelPie","totalTasksCount","selected","setSelected","hovered","setHovered","labelledTasksCount","labelData","reduce","filtered","tooltip","fontSize","fontWeight","data","radius","PieChart","defaultProps","lineWidth","segmentsStyle","transition","segmentsShift","animate","dataEntry","labelPosition","labelStyle","pointerEvents","_","onMouseOver","onMouseOut","ProgressRingBox","ProgressRingDiv","ProgressRingLegendDiv","LegendDataDiv","TextDiv","PercentTextDiv","LegendColorDot","ProgressRings","taskCompletionPercent","timeCompletionPercent","ProgressCard","ProgressCardText","FormattedTimeDiv","absoluteIconStyles","css","ClockIconDiv","TimeProgressCard","rTLTObj","rTLTHours","rTLTMins","tTLTObj","tTLTHours","tTLTMins","TickIconDiv","TaskProgressCard","quotes","quote","author","MiscBoardContainer","MainSummaryContainer","ProgressRingContainer","ProgressCardContainer","QuoteAndLabelContainer","LabelPieContainer","QuoteContainer","letterCount","size","toPrecision","getQuoteFontSize","MiscBoard","todaysQuote","start","diff","getTimezoneOffset","getTodaysQuote","DashboardMainContainer","DashboardMain","DashboardContainer","backgroundMain","Dashboard","TaskSelectInput","select","TaskLabel","taskLabel","updatedLabel","setUpdatedLabel","autoFocus","onBlur","taskId","defaultValue","e","target","onKeyDown","key","TaskCardContainer","TaskCardDragIcon","TaskCardDiv","labelColor","isFocussed","TaskStatusDiv","TaskDetailsDiv","TaskContentDiv","TaskEditInput","textarea","TimeEditInput","input","TaskActionButton","TaskLabelContainer","TaskDeleteButton","TaskControllerDiv","TaskCard","str","taskIndex","focussedTaskGlobalKey","forwardRBDProvided","taskUnderEdit","setTaskUnderEdit","setUpdatedTaskContent","timeUnderEdit","setTimeUnderEdit","setUpdatedTime","labelUnderEdit","setLabelUnderEdit","showDragIcon","setShowDragIcon","flipId","ref","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","tickmark","glowBulb","bulb","onDoubleClick","trim","substring","isDoneBtn","stopPropagation","TaskFeedbackContainer","RemainingTaskListTimeDiv","ErrorMessage","TaskFeedback","setInputValid","error","setError","errorGenerated","split","isNaN","parseInt","taskTime","pop","join","numericTime","TaskInputContainer","TaskContentInputDiv","TaskContentInputField","TaskTimeInputDiv","TaskTimeInputField","TaskInput","taskContentInputRef","taskTimeInputRef","defaultTime","defaultLabel","setTask","setTime","generateFeedbackForTask","setGenerateFeedbackForTask","generateFeedbackForTime","setGenerateFeedbackForTime","isInputValid","submitTask","includes","userLabel","toLowerCase","validLabel","newTask","random","createdAt","toISOString","focus","debouncedGenerateInputFeedback","useCallback","placeholder","el","onTaskInputChangeHandler","onTimeInputChangeHandler","DoneTasksDivider","DividerLine","DividerIcon","DividerActionDiv","Divider","showActionBtn","setShowActionBtn","NoTasksDiv","allCompleted","NoTasksIcon","NoTasks","TaskBoardContainer","EmptySpace","TaskBoard","flipKey","getFlipKey","onDragEnd","result","destination","items","source","reorderedItem","direction","greaterIndex","max","smallerIndex","min","droppableId","provided","droppableProps","isDragDisabled","draggableId","provided2","MobileView","settingsSlice","showTipsOnStartup","autoCompleteZeroTimeTask","toggleDarkTheme","updateDefaultTime","updateDefaultLabel","DarkModeDiv","DarkThemeToggle","InputDiv","checked","offColor","onColor","DefaultTaskTimeBox","TimeInput","DefaultTaskTime","DefaultTaskLabelBox","LabelInput","DefaultTaskLabel","SettingsContainer","SettingsDiv","Settings","GlobalStyles","createGlobalStyle","body","lightTheme","AppContainer","App","isDarkTheme","isMobile","path","configureStore","reducer","tasksReducer","settingsReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5ba7c20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d54414a9.svg\";","export default __webpack_public_path__ + \"static/media/namedLogoDark.26f038da.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdDashboard, MdSettings } from \"react-icons/md\";\nimport { IoMdAnalytics } from \"react-icons/io\";\nimport { BiExclude } from \"react-icons/bi\";\nimport { NavLink } from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport logo from \"./../../images/logo.svg\";\nimport namedLogoLight from \"./../../images/namedLogoDark.svg\";\n\nconst MenuContainer = styled.div`\n    width: 10%;\n    max-width: 108px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-color: #020202;\n    border-radius: 0 10px 10px 0;\n    border-left: 15px solid #fabb18;\n    position: relative;\n`;\n\nconst AppLogoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    width: 100%;\n    top: 25px;\n    left: 5px;\n    img {\n        width: 60%;\n    }\n    /* background-color:pink; */\n`;\n\nconst AppTextLogoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    width: 100%;\n    bottom: 15px;\n    img {\n        width: 75%;\n    }\n    /* background-color:purple; */\n`;\n\nconst activeClassName = \"nav-item-active\";\nconst MenuOptions = styled(NavLink).attrs({ activeClassName })`\n    display: flex;\n    justify-content: center;\n    margin: 7px 0;\n    border-radius: 0 5px 5px 0;\n    background-color: #020202;\n    svg {\n        font-size: 1.8em;\n        color: #fff;\n        margin: 10px 0;\n    }\n    &.${activeClassName} {\n        svg {\n            color: #fabb18;\n        }\n    }\n    width: 100%;\n    transition: width 0.2s;\n    &:hover {\n        svg {\n            color: #fff;\n        }\n        width: 125%;\n        background-color: #fabb18;\n    }\n`;\n\nconst DummyMenuOptions = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 7px 0;\n    border-radius: 0 5px 5px 0;\n    background-color: #020202;\n    svg {\n        font-size: 1.8em;\n        color: #fff;\n        margin: 10px 0;\n    }\n    width: 100%;\n    transition: width 0.2s;\n    &:hover {\n        svg {\n            color: #fff;\n        }\n        width: 125%;\n        background-color: #fabb18;\n    }\n`;\n\nexport function Menu() {\n    return (\n        <MenuContainer>\n            <AppLogoContainer>\n                <img src={logo} alt=\"logo\" />\n            </AppLogoContainer>\n            <MenuOptions exact to=\"/\">\n                <MdDashboard data-tip=\"\" data-for=\"dashboard\" />\n\n                <ReactTooltip id=\"dashboard\" getContent={() => \"Dashboard\"} />\n            </MenuOptions>\n\n            <DummyMenuOptions>\n                <IoMdAnalytics data-tip=\"\" data-for=\"analytics\" />\n                <ReactTooltip id=\"analytics\" getContent={() => \"Coming Soon\"} />\n            </DummyMenuOptions>\n\n            <DummyMenuOptions>\n                <BiExclude data-tip=\"\" data-for=\"notes\" />\n                <ReactTooltip id=\"notes\" getContent={() => \"Coming Soon\"} />\n            </DummyMenuOptions>\n\n            <MenuOptions exact to=\"/settings\">\n                <MdSettings data-tip=\"\" data-for=\"settings\" />\n                <ReactTooltip id=\"settings\" getContent={() => \"Settings\"} />\n            </MenuOptions>\n\n            <AppTextLogoContainer>\n                <img src={namedLogoLight} alt=\"fokus\" />\n            </AppTextLogoContainer>\n        </MenuContainer>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/betaLogoLight.3b10d8d5.svg\";","export default __webpack_public_path__ + \"static/media/betaLogoDark.cfd3083a.svg\";","export function formattedTimeString(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return `${mins}:${secs}`;\n}\n\nexport function formattedTimeStringv2(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return { mins, secs };\n}\n\nexport function getFormattedDate() {\n    let d = new Date();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return {\n        day: days[d.getDay()],\n        month: months[d.getMonth()],\n        date: d.getDate(),\n        year: d.getFullYear(),\n    };\n}\n\nexport function getFormattedListTimeSummary(x) {\n    x = Math.floor(x / 1000);\n    let mins = Math.floor((x % 3600) / 60);\n    let hours = Math.floor(x / 3600);\n\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n    if (hours == 0) {\n        hours = `0`;\n    } else if (hours < 10) {\n        hours = `${hours}`;\n    }\n\n    return { hours, mins };\n}\n\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\n\nexport function getOrdinalSuffix(i) {\n    let j = i % 10,\n        k = i % 100;\n    if (j == 1 && k != 11) {\n        return \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return \"rd\";\n    }\n    return \"th\";\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { BsCalendarFill } from \"react-icons/bs\";\nimport { getFormattedDate  , getOrdinalSuffix} from \"../../helpers\";\n\nconst DayDateDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: space-around;\n    width: 25%;\n    height: 55%;\n    /* background-color:grey; */\n`;\n\nconst CalendarIconDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 20%;\n    svg {\n        color: #fabb18;\n        font-size: 1.4em;\n    }\n`;\n\nconst DayDateText = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: center;\n    width: 65%;\n    font-weight: bold;\n    font-size: 0.8em;\n    color:${p=>p.theme.primaryText};\n    p {\n        margin: 0;\n    }\n    sup{\n        font-size:0.5em;\n    }\n`;\n\nexport function DayDate() {\n    const DateObj = getFormattedDate();\n    return (\n        <DayDateDiv>\n            <CalendarIconDiv>\n                <BsCalendarFill />\n            </CalendarIconDiv>\n            <DayDateText>\n                <span>\n                    {DateObj.day} {DateObj.date}<sup>{getOrdinalSuffix(DateObj.date)}</sup>\n                </span>\n                <p>\n                    {DateObj.month}, {DateObj.year}\n                </p>\n            </DayDateText>\n        </DayDateDiv>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport betaLogoLight from \"./../../images/betaLogoLight.svg\";\nimport betaLogoDark from \"./../../images/betaLogoDark.svg\";\nimport { DayDate } from \"./../../components/dashBoard/DayDate\";\nimport { useSelector } from \"react-redux\";\n\nconst DashboardHeroContainer = styled.div`\n    flex: 1 1 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* background-color: purple; */\n`;\n\nconst DashboardHeroDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    width: 80%;\n    max-width: 736px;\n    height: 85%;\n    img {\n        width: 45%;\n    }\n`;\n\nexport function DashboardHero(p) {\n    const darkTheme = useSelector((s) => s.settings.darkTheme);\n    return (\n        <DashboardHeroContainer>\n            <DashboardHeroDiv>\n                <img src={darkTheme?betaLogoDark:betaLogoLight} alt=\"fokus\" />\n                <DayDate />\n            </DashboardHeroDiv>\n        </DashboardHeroContainer>\n    );\n}\n","export const MIN_TO_MS = 60 * 1000;\n\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { MIN_TO_MS } from \"./../../helpers/constants\";\n\nconst labelOptions = {\n    work: {\n        color: \"#de1738\",\n        count: 0,\n    },\n    personal: {\n        color: \"#89CFF0\",\n        count: 0,\n    },\n    fitness: {\n        color: \"#76ff7a\",\n        count: 0,\n    },\n    metime: {\n        color: \"#7442c8\",\n        count: 0,\n    },\n    explore: {\n        color: \"#efc0fe\",\n        count: 0,\n    },\n};\n\nexport const tasksSlice = createSlice({\n    name: \"tasks\",\n    initialState: {\n        taskArray: [],\n        labels: labelOptions,\n        soundscape: {\n            track: \"mute\",\n            isPlaying: false,\n            volume: 0.7,\n        },\n        meta: {\n            globalKey: 0,\n            completedTaskStartIndex: -1,\n            focussedTaskIndex: -1,\n            showCompletedTasks: true,\n            completedTasksCount: 0,\n            totalTaskListTime: 0,\n            remainingTaskListTime: 0,\n        },\n    },\n    reducers: {\n        create: (tasks, { payload }) => {\n            payload.time = payload.time * MIN_TO_MS;\n            payload.remainingTime = payload.remainingTime * MIN_TO_MS;\n            tasks.taskArray.unshift(payload);\n            tasks.meta.totalTaskListTime += payload.time;\n            tasks.meta.remainingTaskListTime += payload.time;\n            if (tasks.meta.completedTaskStartIndex != -1) ++tasks.meta.completedTaskStartIndex;\n        },\n        remove: (tasks, { payload }) => {\n            tasks.taskArray = tasks.taskArray.filter((i) => {\n                if (i.id !== payload) return true;\n                else {\n                    if (!i.isCompleted) {\n                        if (tasks.meta.completedTaskStartIndex != -1) --tasks.meta.completedTaskStartIndex;\n                    } else {\n                        tasks.meta.completedTasksCount--;\n                        if (tasks.meta.completedTaskStartIndex == tasks.taskArray.length - 1) {\n                            tasks.meta.completedTaskStartIndex = -1;\n                        }\n                    }\n\n                    if (!i.isCompleted) {\n                        tasks.meta.remainingTaskListTime -= i.remainingTime;\n                    }\n                    tasks.meta.totalTaskListTime -= i.time;\n\n                    return false;\n                }\n            });\n        },\n        updateTaskContent: ({ taskArray }, { payload }) => {\n            taskArray.forEach((i) => {\n                if (i.id === payload.id) {\n                    i.content = payload.updatedTaskContent;\n                }\n            });\n        },\n        updateTaskLabel: ({ taskArray }, { payload }) => {\n            taskArray.forEach((i) => {\n                if (i.id === payload.id) {\n                    i.label = payload.label;\n                }\n            });\n        },\n        updateTaskTime: (tasks, { payload }) => {\n            tasks.taskArray.forEach((i) => {\n                if (i.id === payload.id) {\n                    tasks.meta.totalTaskListTime -= i.time;\n                    tasks.meta.remainingTaskListTime -= i.remainingTime;\n                    tasks.meta.totalTaskListTime += payload.updatedTime * MIN_TO_MS;\n                    tasks.meta.remainingTaskListTime += payload.updatedTime * MIN_TO_MS;\n                    i.remainingTime = payload.updatedTime * MIN_TO_MS;\n                    i.time = payload.updatedTime * MIN_TO_MS;\n                }\n            });\n        },\n        updateTaskTimeByVal: (tasks, { payload }) => {\n            if (tasks.taskArray[payload.focussedTaskIndex].remainingTime + payload.val * MIN_TO_MS < 0) {\n                tasks.meta.remainingTaskListTime -= tasks.taskArray[payload.focussedTaskIndex].remainingTime;\n                tasks.taskArray[payload.focussedTaskIndex].remainingTime = 0;\n            } else {\n                tasks.meta.remainingTaskListTime -= tasks.taskArray[payload.focussedTaskIndex].remainingTime;\n                tasks.taskArray[payload.focussedTaskIndex].remainingTime += payload.val * MIN_TO_MS;\n                tasks.meta.remainingTaskListTime += tasks.taskArray[payload.focussedTaskIndex].remainingTime;\n            }\n\n            if (tasks.taskArray[payload.focussedTaskIndex].time + payload.val * MIN_TO_MS < 0) {\n                tasks.meta.totalTaskListTime -= tasks.taskArray[payload.focussedTaskIndex].time;\n                tasks.taskArray[payload.focussedTaskIndex].time = 0;\n            } else {\n                tasks.meta.totalTaskListTime -= tasks.taskArray[payload.focussedTaskIndex].time;\n                tasks.taskArray[payload.focussedTaskIndex].time += payload.val * MIN_TO_MS;\n                tasks.meta.totalTaskListTime += tasks.taskArray[payload.focussedTaskIndex].time;\n            }\n        },\n        updateOrder: (tasks, { payload }) => {\n            tasks.taskArray = payload;\n        },\n        focusOnTask: (tasks, { payload }) => {\n            if (typeof payload === \"number\") {\n                tasks.meta.focussedTaskIndex = payload;\n            } else {\n                // done tasks, remaining time = 0 tasks shouldnt be picked.\n                let completedTaskStartIndex = tasks.meta.completedTaskStartIndex !== -1 ? tasks.meta.completedTaskStartIndex : tasks.taskArray.length;\n                let index = -1;\n                if (payload === \"smallest\") {\n                    let time,\n                        lowest = Number.POSITIVE_INFINITY;\n                    for (let i = 0; i < completedTaskStartIndex; i++) {\n                        time = tasks.taskArray[i].remainingTime;\n                        if(time<1000) continue; // rem. time less than second(1000ms)\n                        if (time < lowest) {\n                            lowest = time;\n                            index = i;\n                        }\n                    }\n                } else if (payload === \"largest\") {\n                    let time,\n                        highest = Number.NEGATIVE_INFINITY;\n                    for (let i = 0; i < completedTaskStartIndex; i++) {\n                        time = tasks.taskArray[i].remainingTime;\n                        if(time<1000) continue; // rem. time less than second(1000ms)\n                        if (time > highest) {\n                            highest = time;\n                            index = i;\n                        }\n                    }\n                }\n                tasks.meta.focussedTaskIndex = index;\n            }\n        },\n        resetFocussedTask: (tasks) => {\n            tasks.meta.focussedTaskIndex = -1;\n        },\n        tick: (tasks, { payload }) => {\n            tasks.taskArray[payload.focussedTaskIndex].remainingTime -= payload.deltaMS;\n            tasks.meta.remainingTaskListTime -= payload.deltaMS;\n\n            if (tasks.taskArray[payload.focussedTaskIndex].remainingTime < 0) {\n                tasks.taskArray[payload.focussedTaskIndex].remainingTime = 0;\n            }\n            if (tasks.meta.remainingTaskListTime < 0) {\n                tasks.meta.remainingTaskListTime = 0;\n            }\n        },\n        resetTaskTimer: (tasks, { payload }) => {\n            tasks.taskArray[payload].isRunning = false;\n\n            tasks.meta.remainingTaskListTime -= tasks.taskArray[payload].remainingTime;\n            tasks.meta.remainingTaskListTime += tasks.taskArray[payload].time;\n\n            tasks.taskArray[payload].remainingTime = tasks.taskArray[payload].time;\n        },\n        toggleIsRunning: (tasks, { payload }) => {\n            if (payload.val !== undefined) tasks.taskArray[payload.idx].isRunning = payload.val;\n            else tasks.taskArray[payload.idx].isRunning = !tasks.taskArray[payload.idx].isRunning;\n        },\n        toggleShowCompletedTasks: (tasks) => {\n            tasks.meta.showCompletedTasks = !tasks.meta.showCompletedTasks;\n        },\n        toggleIsCompleted: (tasks, { payload }) => {\n            tasks.taskArray.forEach((i) => {\n                if (i.id === payload) {\n                    if (i.isCompleted) {\n                        tasks.meta.remainingTaskListTime += i.remainingTime;\n                        --tasks.meta.completedTasksCount;\n                    } else {\n                        tasks.meta.remainingTaskListTime -= i.remainingTime;\n                        ++tasks.meta.completedTasksCount;\n                    }\n\n                    i.isCompleted = !i.isCompleted;\n                }\n            });\n        },\n        clearCompletedTasks: (tasks) => {\n            if (tasks.meta.completedTaskStartIndex !== -1) {\n                for (let i = tasks.meta.completedTaskStartIndex; i < tasks.taskArray.length; i++) {\n                    if (tasks.taskArray[i].label !== null) tasks.labels[tasks.taskArray[i].label].count--;\n\n                    tasks.meta.totalTaskListTime -= tasks.taskArray[i].time;\n                }\n\n                tasks.taskArray.length = tasks.meta.completedTaskStartIndex;\n                tasks.meta.completedTaskStartIndex = -1;\n                tasks.meta.completedTasksCount = 0;\n            }\n        },\n        updateLabelCount: (tasks, { payload }) => {\n            if (payload.oldLabel !== null) tasks.labels[payload.oldLabel].count--;\n            if (payload.newLabel !== null) tasks.labels[payload.newLabel].count++;\n        },\n        incrementGlobalKey: ({ meta }) => {\n            ++meta.globalKey;\n        },\n        rearrange: (tasks, { payload }) => {\n            let id = payload.id;\n\n            if (payload.markedAsComplete) {\n                if (tasks.meta.completedTaskStartIndex === -1) {\n                    tasks.meta.completedTaskStartIndex = tasks.taskArray.length - 1;\n                    let found = false;\n                    for (let i = 0; i < tasks.taskArray.length - 1; i++) {\n                        if (found) {\n                            let temp = tasks.taskArray[i];\n                            tasks.taskArray[i] = tasks.taskArray[i + 1];\n                            tasks.taskArray[i + 1] = temp;\n                        } else if (tasks.taskArray[i].id === id) {\n                            found = true;\n                            let temp = tasks.taskArray[i];\n                            tasks.taskArray[i] = tasks.taskArray[i + 1];\n                            tasks.taskArray[i + 1] = temp;\n                        }\n                    }\n                    tasks.meta.completedTaskStartIndex = tasks.taskArray.length - 1;\n                } else {\n                    let task, idx;\n                    for (let i = 0; i < tasks.taskArray.length; i++) {\n                        if (tasks.taskArray[i].id === id) {\n                            task = tasks.taskArray[i];\n                            idx = i;\n                            break;\n                        }\n                    }\n                    let pos = -1;\n                    for (let i = tasks.meta.completedTaskStartIndex; i < tasks.taskArray.length; i++) {\n                        if (tasks.taskArray[i].globalKey > task.globalKey) continue;\n                        else {\n                            pos = i;\n                            break;\n                        }\n                    }\n\n                    if (pos === -1) {\n                        tasks.taskArray.push(task);\n                    } else {\n                        tasks.taskArray.splice(pos, 0, task);\n                    }\n                    tasks.taskArray.splice(idx, 1);\n                    tasks.meta.completedTaskStartIndex -= 1;\n                }\n            } else {\n                if (tasks.meta.completedTaskStartIndex == 0) {\n                    let task, idx;\n                    for (let i = tasks.meta.completedTaskStartIndex; i < tasks.taskArray.length; i++) {\n                        if (tasks.taskArray[i].id === id) {\n                            task = tasks.taskArray[i];\n                            idx = i;\n                            break;\n                        }\n                    }\n\n                    tasks.taskArray.splice(idx, 1);\n                    tasks.taskArray.unshift(task);\n                    tasks.meta.completedTaskStartIndex = 1;\n                } else {\n                    let task, idx;\n                    for (let i = tasks.meta.completedTaskStartIndex; i < tasks.taskArray.length; i++) {\n                        if (tasks.taskArray[i].id === id) {\n                            task = tasks.taskArray[i];\n                            idx = i;\n                            break;\n                        }\n                    }\n\n                    let start = tasks.meta.completedTaskStartIndex - 1;\n                    let pos = -1;\n                    for (let i = start; i >= 0; i--) {\n                        if (tasks.taskArray[i].globalKey < task.globalKey) continue;\n                        else {\n                            pos = i;\n                            break;\n                        }\n                    }\n\n                    tasks.taskArray.splice(idx, 1);\n                    if (pos === -1) {\n                        tasks.taskArray.unshift(task);\n                    } else {\n                        pos++;\n                        tasks.taskArray.splice(pos, 0, task);\n                    }\n                    tasks.meta.completedTaskStartIndex += 1;\n                }\n\n                if (tasks.meta.completedTaskStartIndex == tasks.taskArray.length) {\n                    tasks.meta.completedTaskStartIndex = -1;\n                }\n            }\n        },\n        changeSoundscapeTrack: ({ soundscape }, { payload }) => {\n            soundscape.track = payload;\n        },\n        toggleSoundscapeState: ({ soundscape }, { payload }) => {\n            soundscape.isPlaying = payload;\n        },\n        updateSoundscapeVolume: ({ soundscape }, { payload }) => {\n            soundscape.volume = payload;\n        },\n    },\n});\n\nexport const {\n    create,\n    remove,\n    updateTaskContent,\n    updateTaskLabel,\n    updateTaskTime,\n    updateTaskTimeByVal,\n    focusOnTask,\n    resetFocussedTask,\n    tick,\n    resetTaskTimer,\n    toggleIsRunning,\n    toggleShowCompletedTasks,\n    toggleIsCompleted,\n    clearCompletedTasks,\n    updateOrder,\n    updateLabelCount,\n    incrementGlobalKey,\n    rearrange,\n    changeSoundscapeTrack,\n    toggleSoundscapeState,\n    updateSoundscapeVolume,\n} = tasksSlice.actions;\n\nexport default tasksSlice.reducer;\n","import { useEffect, useRef } from \"react\";\n\nexport default function useTimer(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport function useTimer2(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick(deltaMS) {\n            savedCallback.current(deltaMS);\n        }\n        if (delay !== null) {\n            let id = absoluteSetInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nconst absoluteSetInterval = (handler, delay) => {\n    let baseTime = Date.now();\n    const callHandler = () => {\n        let timePassedSinceLastCall = Date.now() - baseTime;\n        console.log('timePassedSinceLastCall: ',timePassedSinceLastCall)\n        if (timePassedSinceLastCall > 1000) {\n            baseTime = Date.now(); // must be set before calling handler to avoid time delay in executing it\n            handler(timePassedSinceLastCall);\n        }\n    };\n    return setInterval(callHandler, delay);\n};\n","import React from \"react\";\n\nexport const GlobeIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n        </svg>\n    );\n};\n\nexport const ResetIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n            />\n        </svg>\n    );\n};\n\nexport const SummaryCardTick = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path\n                fillRule=\"evenodd\"\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                clipRule=\"evenodd\"\n            />\n        </svg>\n    );\n};\n\nexport const SummaryCardClock = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path\n                fillRule=\"evenodd\"\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\n                clipRule=\"evenodd\"\n            />\n        </svg>\n    );\n};\n\nexport const DragIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\" fill=\"currentColor\">\n            <path d=\"M 10 6 a 2 2 0 1 1 0 -4 a 2 2 0 0 1 0 4 z M 10 12 a 2 2 0 1 1 0 -4 a 2 2 0 0 1 0 4 z M 10 18 a 2 2 0 1 1 0 -4 a 2 2 0 0 1 0 4 z M 20 6 a 2 2 0 1 1 0 -4 a 2 2 0 0 1 0 4 z M 20 12 a 2 2 0 1 1 0 -4 a 2 2 0 0 1 0 4 z M 20 18 a 2 2 0 1 1 0 -4 a 2 2 0 0 1 0 4 z\" />\n        </svg>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/ding.d7a93f4f.mp3\";","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n    toggleIsRunning,\n    tick,\n    updateTaskTimeByVal,\n    resetTaskTimer,\n    toggleSoundscapeState,\n    toggleIsCompleted,\n    resetFocussedTask,\n} from \"./../../containers/taskBoard/taskBoardSlice\";\nimport useTimer, { useTimer2 } from \"../../hooks/useTimer\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { ResetIcon } from \"./../../components/customIcons\";\nimport dingSound from \"./../../sounds/ding.mp3\";\nimport { BsFillPauseFill, BsFillPlayFill } from \"react-icons/bs\";\nimport { FaClipboardCheck } from \"react-icons/fa\";\nimport { formattedTimeStringv2 } from \"./../../helpers\";\nimport { MIN_TO_MS } from \"../../helpers/constants\";\nimport ReactTooltip from \"react-tooltip\";\n\nlet dingSoundElement = new Audio(dingSound);\n\nconst FocussedTaskDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    position: relative;\n    background-color: #fabb18;\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n`;\n\nconst FocussedTaskPlayer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 55%;\n    /* background-color: red; */\n`;\n\nconst FocussedTaskContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    padding: 5px;\n    height: 30%;\n    width: 90%;\n    max-width: 376px;\n    border-radius: 10px;\n    border: 3px solid black;\n    word-wrap: break-word;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    text-shadow: 0 0 4px rgb(248, 185, 23, 0.4);\n    p {\n        min-width: 0;\n        font-weight: bold;\n        font-size: 0.9em;\n        margin: 3px;\n    }\n    position: relative;\n    /* -webkit-box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8);\n    box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8); */\n`;\n\nconst TotalTaskTimeBadge = styled.div`\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    border-radius: 3px;\n    p {\n        font-size: 0.7em;\n        color: ${(p) => p.theme.secondaryText};\n        margin: 3px 5px;\n    }\n    background-color: #fabb18;\n    position: absolute;\n    top: 3px;\n    right: 3px;\n    opacity: 0.6;\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nconst FocussedTaskTimer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 80%;\n    width: 50%;\n    /* background-color: #df1aa1; */\n`;\n\nconst CountdownTimerDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 85%;\n    height: 85%;\n    background-color: ${(p) => (p.theme.type === \"l\" ? \"#FFF\" : \"#FFE39E\")};\n    color: #000;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    border-radius: 50%;\n    font-weight: bold;\n    p {\n        margin: 0;\n        font-size: 0.9em;\n    }\n    span {\n        margin: 0 2px;\n        font-size: 0.7em;\n    }\n`;\n\nconst FocussedTaskController = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 90%;\n    width: 30%;\n    /* background-color: #f1f7dd; */\n`;\n\nconst PlayPauseButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    background-color: #000;\n    border-radius: 50%;\n    margin: 10px 20px;\n    svg {\n        color: #fabb18;\n        font-size: 1.5em;\n        margin-left: ${(p) => (p.isPlayBtn ? \"3px\" : \"0\")};\n    }\n    cursor: pointer;\n`;\n\nconst TaskCompletedDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 45px;\n    height: 45px;\n    margin: 10px 20px;\n    svg {\n        color: ${(p) => p.theme.secondaryText};\n        font-size: 2em;\n    }\n`;\n\nconst UpdateTimeButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 25px;\n    height: 25px;\n    cursor: ${(p) => (p.isDisabled ? \"default\" : \"pointer\")};\n    color: ${(p) => (p.isDisabled ? \"#777672\" : \"#000\")};\n`;\n\nconst ResetButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    top: 7px;\n    left: 7px;\n    cursor: pointer;\n    background-color: #000;\n    svg {\n        color: #fabb18;\n        width: 20px;\n    }\n`;\n\nexport function FocussedTask() {\n    const focussedTaskIndex = useSelector((state) => state.tasks.meta.focussedTaskIndex);\n    let focussedTask = useSelector((state) => (focussedTaskIndex !== -1 ? state.tasks.taskArray[focussedTaskIndex] : null));\n    const dispatch = useDispatch();\n    const delay = 1010; // to account for the delay in executing code.\n    // useTimer(\n    //     () => {\n    //         if (focussedTask === null) return;\n    //         else if (focussedTask.remainingTime > 0) {\n    //             dispatch(tick(focussedTaskIndex));\n    //         } else if (focussedTask.remainingTime === 0) {\n    //             dispatch(toggleSoundscapeState(false));\n    //             dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n    //             dingSoundElement.play();\n    //         }\n    //     },\n    //     focussedTask !== null && focussedTask.isRunning ? delay : null\n    // );\n    useTimer2(\n        (deltaMS) => {\n            if (focussedTask === null) return;\n            else if (focussedTask.remainingTime > 0) {\n                dispatch(tick({ focussedTaskIndex, deltaMS }));\n            } else if (focussedTask.remainingTime === 0) {\n                dispatch(toggleSoundscapeState(false));\n                dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n                dingSoundElement.play();\n            }\n        },\n        focussedTask !== null && focussedTask.isRunning ? delay : null\n    );\n\n    function updateTaskTimeHandler(val) {\n        if (focussedTask.time + val * MIN_TO_MS < 0) return;\n        if (focussedTask.time + val * MIN_TO_MS > 120 * MIN_TO_MS) return;\n        if (focussedTask.isRunning) dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n        dispatch(updateTaskTimeByVal({ focussedTaskIndex, val }));\n        dispatch(toggleSoundscapeState(false));\n    }\n\n    function playPauseHandler(focussedTaskIndex, wasTaskRunning) {\n        dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n        if (wasTaskRunning) {\n            dispatch(toggleSoundscapeState(false));\n        } else {\n            dispatch(toggleSoundscapeState(true));\n        }\n    }\n\n    const countdownObj = formattedTimeStringv2(focussedTask.remainingTime);\n    let countdownMins = countdownObj.mins;\n    let countdownSecs = countdownObj.secs;\n\n    const totalTaskTimeObj = formattedTimeStringv2(focussedTask.time);\n    let totalTaskMins = totalTaskTimeObj.mins;\n\n    return (\n        <FocussedTaskDiv>\n            <FocussedTaskPlayer>\n                <FocussedTaskTimer>\n                    <div style={{ width: 100, height: 100 }}>\n                        <CircularProgressbarWithChildren\n                            value={focussedTask.time !== 0 ? Math.floor((focussedTask.remainingTime / focussedTask.time) * 100) : 0}\n                            styles={buildStyles({\n                                strokeLinecap: \"butt\",\n                                pathColor: \"#121212\",\n                                trailColor: \"#F0F8FF\",\n                            })}\n                            strokeWidth={9}\n                        >\n                            <CountdownTimerDiv>\n                                <p>{countdownMins}</p>\n                                <span>m</span>\n                                <p>{countdownSecs}</p>\n                                <span>s</span>\n                            </CountdownTimerDiv>\n                        </CircularProgressbarWithChildren>\n                    </div>\n                </FocussedTaskTimer>\n\n                <FocussedTaskController>\n                    <UpdateTimeButtonDiv isDisabled={focussedTask.time + 5 * MIN_TO_MS > 120 * MIN_TO_MS} onClick={() => updateTaskTimeHandler(5)}>\n                        <h4>+5</h4>\n                    </UpdateTimeButtonDiv>\n\n                    {focussedTask.remainingTime !== 0 ? (\n                        <PlayPauseButtonDiv isPlayBtn={!focussedTask.isRunning} onClick={() => playPauseHandler(focussedTaskIndex, focussedTask.isRunning)}>\n                            {focussedTask.isRunning ? <BsFillPauseFill /> : <BsFillPlayFill />}\n                        </PlayPauseButtonDiv>\n                    ) : (\n                        <TaskCompletedDiv data-tip=\"\" data-for=\"taskCompleted\">\n                            <FaClipboardCheck />\n                            <ReactTooltip id=\"taskCompleted\" getContent={() => \"Task Completed\"} />\n                        </TaskCompletedDiv>\n                    )}\n\n                    <UpdateTimeButtonDiv isDisabled={focussedTask.time - 5 * MIN_TO_MS < 0} onClick={() => updateTaskTimeHandler(-5)}>\n                        <h4>-5</h4>\n                    </UpdateTimeButtonDiv>\n                </FocussedTaskController>\n\n                <ResetButtonDiv\n                    onClick={() => {\n                        dispatch(toggleSoundscapeState(false));\n                        dispatch(resetTaskTimer(focussedTaskIndex));\n                    }}\n                    data-for=\"reset\"\n                    data-tip=\"\"\n                >\n                    <ResetIcon />\n                    <ReactTooltip id=\"reset\" getContent={() => \"Reset\"} />\n                </ResetButtonDiv>\n            </FocussedTaskPlayer>\n            <FocussedTaskContent>\n                <p>{focussedTask.content}</p>\n                <TotalTaskTimeBadge data-tip=\"\" data-for=\"totalTimeBadge\">\n                    <p>{totalTaskMins}m</p>\n                    <ReactTooltip id=\"totalTimeBadge\" getContent={() => \"Task's total time\"} />\n                </TotalTaskTimeBadge>\n            </FocussedTaskContent>\n        </FocussedTaskDiv>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { FaPen } from \"react-icons/fa\";\nimport { HiClock } from \"react-icons/hi\";\nimport { CgNotes } from \"react-icons/cg\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useDispatch } from \"react-redux\";\nimport { focusOnTask } from \"../../containers/taskBoard/taskBoardSlice\";\n\nconst FocussedTaskDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    position: relative;\n    background-color: #fabb18;\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n`;\n\nconst FocussedTaskPlayer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 55%;\n    border-radius: 10px;\n    /* background-color: #FABB18; */\n    /* box-shadow: 0 2px 10px rgba(166, 173, 201, 0.5);\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.5); */\n`;\n\nconst FocussedTaskContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 5px;\n    height: 30%;\n    width: 90%;\n    max-width: 376px;\n    border-radius: 10px;\n    border: 3px solid black;\n    word-wrap: break-word;\n    background-color:${p=>p.theme.backgroundSecondary};\n    color:${p=>p.theme.primaryText};\n    svg {\n        font-size: 3em;\n    }\n`;\n\nconst FocussedTaskTimer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 80%;\n    width: 50%;\n    /* background-color: #df1aa1; */\n`;\n\nconst CountdownTimerDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 85%;\n    height: 85%;\n    background-color:${p=>p.theme.type===\"l\"?\"#FFF\":\"#FFE39E\"};\n    color:#000;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    border-radius: 50%;\n    font-weight: bold;\n    svg{\n        font-size:1.6em;\n    }\n`;\n\nconst FocussedTaskController = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 90%;\n    width: 30%;\n    /* background-color: #f1f7dd; */\n`;\n\nconst PlayPauseButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    background-color: #000;\n    border-radius: 50%;\n    margin: 10px 20px;\n    svg {\n        color: #fabb18;\n        font-size: 0.9em;\n    }\n`;\n\nconst HelpPickTaskContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 100%;\n    height: 100%;\n    /* background-color: aqua; */\n`;\n\nconst HelpPickTaskLabel = styled.div`\n    display: flex;\n    align-items: center;\n    /* flex-direction: column; */\n    justify-content: center;\n    width: 45%;\n    height: 95%;\n    \n    p {\n        margin: 0 3px;\n        font-size: 0.9em;\n        font-weight: bold;\n        /* color: #fabb18; */\n    }\n    svg {\n        font-size: 1.6em;\n    }\n    /* background-color: cyan; */\n`;\n\nconst HelpPickTaskButtonBox = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 40%;\n    height: 95%;\n    /* background-color: lightblue; */\n`;\n\nconst HelpPickTaskButton = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 40%;\n    border-radius: 5px;\n    border: 2px solid #fabb18;\n    span {\n        font-size: 0.7em;\n        font-weight: bold;\n    }\n    cursor: pointer;\n    background-color:${p=>p.theme.backgroundSecondary};\n    color:${p=>p.theme.primaryText};\n    &:hover {\n        color:${p=>p.theme.secondaryText};\n        background-color:${p=>p.theme.highlight};\n    }\n`;\n\nexport function EmptyFocusBox({ noTasks,noChoice }) {\n    const dispatch = useDispatch();\n\n    return (\n        <FocussedTaskDiv>\n            <FocussedTaskPlayer>\n                <FocussedTaskTimer>\n                    <div style={{ width: 100, height: 100 }}>\n                        <CircularProgressbarWithChildren\n                            value={100}\n                            styles={buildStyles({\n                                pathColor: \"#121212\",\n                                trailColor: \"#F0F8FF\",\n                            })}\n                            strokeWidth={9}\n                        >\n                            <CountdownTimerDiv>\n                                <HiClock/>\n                            </CountdownTimerDiv>\n                        </CircularProgressbarWithChildren>\n                    </div>\n                </FocussedTaskTimer>\n\n                <FocussedTaskController>\n                    <PlayPauseButtonDiv data-tip=\"\" data-for=\"Create\">\n                        <FaPen />\n                        <ReactTooltip id=\"Create\" getContent={() => (noTasks ? \"No task\" : \"Focus on task\")} />\n                    </PlayPauseButtonDiv>\n                </FocussedTaskController>\n            </FocussedTaskPlayer>\n            <FocussedTaskContent>\n                {(noChoice || noTasks) ? (\n                    <CgNotes />\n                ) : (\n                    <HelpPickTaskContainer>\n                        <HelpPickTaskLabel>\n                            <CgNotes />\n                            <p>Focus on</p>\n                        </HelpPickTaskLabel>\n\n                        <HelpPickTaskButtonBox>\n                            <HelpPickTaskButton onClick={() => dispatch(focusOnTask(\"smallest\"))}>\n                                <span>Smallest task</span>\n                            </HelpPickTaskButton>\n                            <HelpPickTaskButton onClick={() => dispatch(focusOnTask(\"largest\"))}>\n                                <span>Biggest task</span>\n                            </HelpPickTaskButton>\n                        </HelpPickTaskButtonBox>\n                    </HelpPickTaskContainer>\n                )}\n            </FocussedTaskContent>\n        </FocussedTaskDiv>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/bell.78943ace.mp3\";","export default __webpack_public_path__ + \"static/media/piano.78d7546a.mp3\";","export default __webpack_public_path__ + \"static/media/river.fcc5ffa7.mp3\";","export default __webpack_public_path__ + \"static/media/forest.3adc2705.mp3\";","export default __webpack_public_path__ + \"static/media/calm.7b889c26.mp3\";","export default __webpack_public_path__ + \"static/media/mute.72917ce4.mp3\";","export default __webpack_public_path__ + \"static/media/bell.08f34c07.svg\";","export default __webpack_public_path__ + \"static/media/piano.4d0c5909.svg\";","export default __webpack_public_path__ + \"static/media/calm.c6683571.svg\";","export default __webpack_public_path__ + \"static/media/river.2ba3e3d5.svg\";","export default __webpack_public_path__ + \"static/media/forest.b8f0f4d7.svg\";","import bell from \"./../../sounds/bell.mp3\";\nimport piano from \"./../../sounds/piano.mp3\";\nimport river from \"./../../sounds/river.mp3\";\nimport forest from \"./../../sounds/forest.mp3\";\nimport calm from \"./../../sounds/calm.mp3\";\n\nimport mute from \"./../../sounds/mute.mp3\";\n\nimport ImgBell from \"./../../images/bell.svg\";\nimport ImgPiano from \"./../../images/piano.svg\";\nimport ImgCalm from \"./../../images/calm.svg\";\nimport ImgRiver from \"./../../images/river.svg\";\nimport ImgForest from \"./../../images/forest.svg\";\n\nexport const muteOption = {\n    src: mute,\n    img: null,\n    label: \"Mute\",\n};\n\nexport const soundOptions = {\n    calm: {\n        src: calm,\n        img: ImgCalm,\n        label: \"Calm\",\n    },\n    forest: {\n        src: forest,\n        img: ImgForest,\n        label: \"Forest\",\n    },\n    piano: {\n        src: piano,\n        img: ImgPiano,\n        label: \"Piano\",\n    },\n    river: {\n        src: river,\n        img: ImgRiver,\n        label: \"River\",\n    },\n    bell: {\n        src: bell,\n        img: ImgBell,\n        label: \"Bell\",\n    },\n};\n\nexport function generateAudioElement(trackname) {\n    let audioElement = trackname !== \"mute\" ? new Audio(soundOptions[trackname].src) : new Audio(muteOption.src);\n    audioElement.loop = true;\n    return audioElement;\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Slider from \"react-input-slider\";\nimport { updateSoundscapeVolume } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport { debounce } from \"./../../helpers\";\n\nexport function MusicVolumeControl({isDisabled}) {\n    const ssVolume = useSelector((s) => s.tasks.soundscape.volume);\n    const dispatch = useDispatch();\n    const [volume, setVolume] = useState(ssVolume * 100);\n\n    const debouncedUpdateSoundscapeVolume = debounce((vol) => {\n        dispatch(updateSoundscapeVolume(vol / 100));\n    }, 200);\n\n    function onVolumeChangeHandler(vol) {\n        setVolume(vol);\n        debouncedUpdateSoundscapeVolume(vol);\n    }\n\n    return (\n        <>\n            <Slider\n                axis=\"x\"\n                xstep={5}\n                xmin={0}\n                xmax={100}\n                x={volume}\n                disabled={isDisabled}\n                onChange={({ x }) => onVolumeChangeHandler(x)}\n                styles={{\n                    track: {\n                        backgroundColor: \"#c1c1d7\",\n                        width: \"100%\",\n                        cursor: \"pointer\",\n                    },\n                    active: {\n                        backgroundColor: \"#FABB18\",\n                    },\n                    thumb: {\n                        backgroundColor: \"#2F2F2F\",\n                    },\n                    disabled: {\n                        opacity: 0.2,\n                    },\n                }}\n            />\n        </>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { soundOptions, generateAudioElement, muteOption } from \"./musicUtils\";\nimport { changeSoundscapeTrack } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport { MusicVolumeControl } from \"./MusicVolumeControl\";\nimport { GoUnmute, GoMute } from \"react-icons/go\";\n\nconst SoundscapesContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    /* transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\n    &:hover {\n        transform: scale(1.02);\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n    } */\n`;\n\nconst SoundscapesDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    height: 70%;\n    /* background-color: orange; */\n    color: #fabb18;\n`;\n\nconst SoundscapesHeader = styled.div`\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    width: 90%;\n    position: relative;\n    p {\n        margin: 0;\n        font-weight: bold;\n    }\n    svg {\n        position: absolute;\n        top: 0;\n        right: 0;\n        font-size: 1.4em;\n        margin-left: auto;\n    }\n    svg#unmuted {\n        cursor: pointer;\n    }\n`;\n\nconst SoundOptionsDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 85%;\n    /* background-color: #f8faaa; */\n`;\n\nconst SoundOptionsInput = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    flex-direction: column;\n    /* background-color: #b16afa; */\n    height: 80%;\n    margin: 0 5px;\n    img {\n        width: 40px;\n        cursor: pointer;\n        transition: transform 0.2s;\n        &:hover {\n            transform: scale(1.3);\n        }\n    }\n    span {\n        margin: 0;\n        font-size: 0.8em;\n        font-weight: bold;\n        color: ${(p) => (p.isSelectedSound ? \"#FABB18\" : p.theme.primaryText)};\n        cursor: pointer;\n    }\n`;\n\nconst SoundVolumeControl = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 90%;\n    height: 15%;\n`;\n\nexport function Soundscapes() {\n    const soundscape = useSelector((s) => s.tasks.soundscape);\n    const dispatch = useDispatch();\n\n    const [soundscapeAudioElement, setSoundscapeAudioElement] = useState(() => generateAudioElement(soundscape.track, soundscape.volume));\n\n    // ---- danger zone: don't change without full surety , this code is prone to issues ---///\n\n    useEffect(() => {\n        soundscapeAudioElement.src = soundscape.track !== \"mute\" ? soundOptions[soundscape.track].src : muteOption.src;\n        return () => soundscapeAudioElement.pause();\n    }, [soundscape.track, soundscapeAudioElement, soundscape.isPlaying]);\n\n    soundscapeAudioElement.volume = soundscape.volume;\n    soundscapeAudioElement.addEventListener(\"canplay\", () => {\n        if (soundscape.isPlaying) {\n            soundscapeAudioElement.play();\n        } else {\n            soundscapeAudioElement.pause();\n        }\n    });\n\n    // ---- danger zone: this might be due to my lack of knowledge of useEffect or weird Audio element behaviour ---///\n\n    function isSelectedSound(track) {\n        return soundscape.track === track;\n    }\n\n    return (\n        <SoundscapesContainer>\n            <SoundscapesDiv>\n                <SoundscapesHeader>\n                    <p>Soundscapes</p>\n                    {soundscape.track === \"mute\" ? <GoMute id=\"muted\" /> : <GoUnmute id=\"unmuted\" onClick={() => dispatch(changeSoundscapeTrack(\"mute\"))} />}\n                </SoundscapesHeader>\n                <SoundOptionsDiv>\n                    {Object.keys(soundOptions).map((i) => (\n                        <SoundOptionsInput key={i} onClick={() => dispatch(changeSoundscapeTrack(i))} isSelectedSound={isSelectedSound(i)}>\n                            <img src={soundOptions[i].img} alt={i} />\n                            <span>{soundOptions[i].label}</span>\n                        </SoundOptionsInput>\n                    ))}\n                </SoundOptionsDiv>\n            </SoundscapesDiv>\n            <SoundVolumeControl>\n                <MusicVolumeControl isDisabled={soundscape.track===\"mute\"}/>\n            </SoundVolumeControl>\n        </SoundscapesContainer>\n    );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { FocussedTask } from \"./../../components/FocusBoard/FocussedTask\";\nimport { EmptyFocusBox } from \"./../../components/FocusBoard/EmptyFocusBox\";\nimport { Soundscapes } from \"./../../components/MusicBox/Soundscapes\";\n\nconst FocusBoardContainer = styled.div`\n    flex: 1 1 0;\n    min-width: 346px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin:0 0 0 20px;\n    height:100%;\n    /* background-color:silver; */\n`;\n\nconst FocussedTaskContainer = styled.div`\n    display: flex;\n    align-items:center;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 80%;\n    max-width: 326px;\n    height: 226px;\n    margin: 10px 0;\n    /* background-color: green; */\n`;\n\nconst MusicBoxContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 80%;\n    max-width: 326px;\n    height: 186px;\n    margin: 10px 0;\n    background-color:${p=>p.theme.backgroundSecondary};\n    border-radius: 20px;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n\n// this can be improved as right now whole focus board is re-rendered and not just the focus task containter\n\nexport function FocusBoard() {\n    const focussedTaskIndex = useSelector((state) => state.tasks.meta.focussedTaskIndex);\n    const noTasks = useSelector((s) => s.tasks.taskArray.length===s.tasks.meta.completedTasksCount?true:false);\n    const noChoice = useSelector((s) => s.tasks.taskArray.length-s.tasks.meta.completedTasksCount<=1?true:false);\n    return (\n        <FocusBoardContainer>\n            <FocussedTaskContainer>\n                {focussedTaskIndex !== -1 ? <FocussedTask /> : <EmptyFocusBox noChoice={noChoice} noTasks={noTasks}/>}\n            </FocussedTaskContainer>\n            <MusicBoxContainer>\n                <Soundscapes />\n            </MusicBoxContainer>\n        </FocusBoardContainer>\n    );\n}\n","import React from \"react\";\nimport { AiOutlinePieChart } from \"react-icons/ai\";\nimport styled from \"styled-components\";\n\nconst EmptyLabelPieDiv = styled.div`\n    display: flex;\n    flex-direction:column;\n    align-items: center;\n    width: 100%;\n    text-align:right;\n    color:${p=>p.theme.primaryText};\n    svg {\n        font-size: 5.6em;\n    }\n    p{\n        margin:0;\n        font-size:0.6em;\n        font-weight:bold;\n    }\n    /* background-color:pink; */\n`;\n\nexport function EmptyLabelPie() {\n    return (\n        <EmptyLabelPieDiv data-tip=\"\" data-for=\"EmptyLabelPie\">\n            <AiOutlinePieChart />\n            <p>Tasks/Labels Pie</p>\n        </EmptyLabelPieDiv>\n    );\n}\n","import React, { useState } from \"react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { useSelector } from \"react-redux\";\nimport ReactTooltip from \"react-tooltip\";\nimport { EmptyLabelPie } from \"./EmptyLabelPie\";\n\nexport function LabelPie() {\n    const labels = useSelector((s) => s.tasks.labels);\n    const totalTasksCount = useSelector((s) => s.tasks.taskArray.length);\n\n    const [selected, setSelected] = useState(0);\n    const [hovered, setHovered] = useState(undefined);\n\n    let labelledTasksCount = 0;\n\n    let labelData = Object.keys(labels).reduce((filtered, i) => {\n        if (labels[i].count > 0) {\n            labelledTasksCount += labels[i].count;\n            filtered.push({\n                tooltip: `#${i} - ${labels[i].count} tasks`,\n                value: labels[i].count,\n                color: labels[i].color,\n            });\n        }\n        return filtered;\n    }, []);\n\n    if (totalTasksCount - labelledTasksCount > 0) {\n        labelData.push({\n            tooltip: `No Label - ${totalTasksCount - labelledTasksCount} tasks`,\n            value: totalTasksCount - labelledTasksCount,\n            color: \"#4F4F4F\",\n        });\n    }\n\n    labelData = labelData.map((i, idx) => {\n        if (hovered === idx) {\n            i.color = \"#FABB18\";\n            return i;\n        } else return i;\n    });\n\n    const lineWidth = 60;\n\n    return (\n        <div style={{ width: 130 }} data-tip=\"\" data-for=\"LabelPieChart\">\n            {labelledTasksCount !== 0 ? (\n                <PieChart\n                    style={{\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                    }}\n                    data={labelData}\n                    radius={PieChart.defaultProps.radius - 6}\n                    lineWidth={lineWidth}\n                    segmentsStyle={{ transition: \"stroke .3s\", cursor: \"pointer\" }}\n                    segmentsShift={2}\n                    animate\n                    label={({ dataEntry }) => dataEntry.value}\n                    labelPosition={100 - lineWidth / 2}\n                    labelStyle={{\n                        fill: \"#fff\",\n                        pointerEvents: \"none\",\n                    }}\n                    onClick={(_, index) => {\n                        setSelected(index === selected ? undefined : index);\n                    }}\n                    onMouseOver={(_, index) => {\n                        setHovered(index);\n                    }}\n                    onMouseOut={() => {\n                        setHovered(undefined);\n                    }}\n                />\n            ) : (\n                <EmptyLabelPie />\n            )}\n            <ReactTooltip id=\"LabelPieChart\" getContent={() => (typeof hovered === \"number\" ? labelData[hovered].tooltip : null)} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { buildStyles, CircularProgressbarWithChildren, CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport styled from \"styled-components\";\n\nconst ProgressRingBox = styled.div`\n    display: flex;\n    flex-direction:column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n`;\n\nconst ProgressRingDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 90%;\n    height: 55%;\n    /* background-color:#afa1d1; */\n`;\n\nconst ProgressRingLegendDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 80%;\n    height: 30%;\n    /* background-color: cyan; */\n    color: #FABB18;\n    font-weight: bold;\n    p {\n        margin: 3px 0;\n        font-size: 0.9em;\n        letter-spacing: 2;\n    }\n`;\n\nconst LegendDataDiv = styled.div`\n    display: flex;\n    align-items: center;\n    width: 95%;\n    /* background-color: #fdadef; */\n    margin: 4px 0;\n    color:${p=>p.theme.primaryText};\n`;\n\nconst TextDiv = styled.div`\n    font-weight: bold;\n    font-size: 0.8em;\n    p {\n        margin: 0 3px;\n    }\n`;\n\nconst PercentTextDiv = styled.div`\n    font-weight: bold;\n    font-size: 0.7em;\n    margin-left: auto;\n    color:${p=>p.theme.primaryText};\n`;\n\nconst LegendColorDot = styled.div`\n    width: 10px;\n    height: 10px;\n    background-color: ${(p) => p.color};\n    border-radius: 50%;\n`;\n\nexport function ProgressRings() {\n    const completedTasksCount = useSelector((s) => s.tasks.meta.completedTasksCount);\n    const totalTasksCount = useSelector((s) => s.tasks.taskArray.length);\n    let taskCompletionPercent = totalTasksCount !== 0 ? Math.floor((completedTasksCount / totalTasksCount) * 100) : 100;\n\n    const remainingTaskListTime = useSelector((s) => s.tasks.meta.remainingTaskListTime);\n    const totalTaskListTime = useSelector((s) => s.tasks.meta.totalTaskListTime);\n    let timeCompletionPercent = totalTaskListTime !== 0 ? Math.floor(((totalTaskListTime - remainingTaskListTime) / totalTaskListTime) * 100) : 100;\n\n    return (\n        <ProgressRingBox>\n            <ProgressRingDiv>\n                <div style={{ width: 115, height: 115 }}>\n                    <CircularProgressbarWithChildren\n                        value={taskCompletionPercent}\n                        styles={buildStyles({\n                            pathColor: \"#77dd77\",\n                            trailColor: \"#FFE39E\",\n                        })}\n                        strokeWidth={11}\n                    >\n                        <div style={{ width: 75, height: 75 }}>\n                            <CircularProgressbar\n                                value={timeCompletionPercent}\n                                styles={buildStyles({\n                                    pathColor: \"#0000cd\",\n                                    trailColor: \"#FFE39E\",\n                                })}\n                                strokeWidth={16}\n                            />\n                        </div>\n                    </CircularProgressbarWithChildren>\n                </div>\n            </ProgressRingDiv>\n            <ProgressRingLegendDiv>\n                <p>Progress</p>\n                <LegendDataDiv>\n                    <LegendColorDot color=\"#77dd77\" />\n                    <TextDiv>\n                        <p>\n                            tasks\n                        </p>\n                    </TextDiv>\n\n                    <PercentTextDiv>\n                        <span>{totalTasksCount===0? \"--\":`${taskCompletionPercent}%`}</span>\n                    </PercentTextDiv>\n                </LegendDataDiv>\n                <LegendDataDiv>\n                    <LegendColorDot color=\"#0000cd\" />\n                    <TextDiv>\n                        <p>time</p>\n                    </TextDiv>\n                    <PercentTextDiv>\n                    <span>{totalTasksCount===0? \"--\":`${timeCompletionPercent}%`}</span>\n                    </PercentTextDiv>\n                </LegendDataDiv>\n            </ProgressRingLegendDiv>\n        </ProgressRingBox>\n    );\n}\n","import React from \"react\";\nimport styled , {css} from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { getFormattedListTimeSummary } from \"../../helpers\";\nimport { SummaryCardClock } from \"./../customIcons\";\n\nconst ProgressCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    position: relative;\n    width: 95%;\n    height: 45%;\n    border-radius: 10px;\n    border-left: 5px solid #0000cd;\n    color: ${p=>p.theme.primaryText};\n    background-color: ${(p) => (p.theme.type === \"l\" ? \"#f0f8ff\" : \"#00213D\")};\n`;\n\nconst ProgressCardText = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 90%;\n    height: 45%;\n    /* background-color: #d1effa; */\n    span {\n        font-weight: bold;\n        font-size: 0.7em;\n        opacity:0.6;\n    }\n`;\n\nconst FormattedTimeDiv = styled.div`\n    display: flex;\n    align-items: center;\n    p {\n        margin: 0;\n        font-weight: bold;\n        font-size: 1.1em;\n    }\n    span {\n        margin: 0 3px;\n        font-size: 0.5em;\n    }\n`;\n\nconst absoluteIconStyles = css`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n`;\n\nconst ClockIconDiv = styled.div`\n    width:${(p) => (p.noTasks ? \"45%\" : \"20px\")};\n    ${(p) => (p.noTasks ? \"\" : absoluteIconStyles)}\n    svg {\n        color: #0000cd;\n        opacity: ${(p) => (p.noTasks ? \"0.7\" : 1)};\n    }\n`;\n\nexport function TimeProgressCard() {\n    const totalTaskListTime = useSelector((state) => state.tasks.meta.totalTaskListTime);\n    const remainingTaskListTime = useSelector((state) => state.tasks.meta.remainingTaskListTime);\n    const focusedTime = totalTaskListTime - remainingTaskListTime;\n    const rTLTObj = getFormattedListTimeSummary(focusedTime);\n    let rTLTHours = rTLTObj.hours;\n    let rTLTMins = rTLTObj.mins;\n\n    const tTLTObj = getFormattedListTimeSummary(totalTaskListTime);\n    let tTLTHours = tTLTObj.hours;\n    let tTLTMins = tTLTObj.mins;\n    return (\n        <ProgressCard>\n            {totalTaskListTime !== 0 && (\n                <>\n                    <ProgressCardText>\n                        <FormattedTimeDiv>\n                            <p>{rTLTHours}</p>\n                            <span>h</span>\n                            <p>{rTLTMins}</p>\n                            <span>m</span>\n                        </FormattedTimeDiv>\n\n                        <span>completed time</span>\n                    </ProgressCardText>\n                    <ProgressCardText>\n                        <FormattedTimeDiv>\n                            <p>{tTLTHours}</p>\n                            <span>h</span>\n                            <p>{tTLTMins}</p>\n                            <span>m</span>\n                        </FormattedTimeDiv>\n                        <span>total time</span>\n                    </ProgressCardText>\n                </>\n            )}\n            <ClockIconDiv noTasks={totalTaskListTime === 0}>\n                <SummaryCardClock />\n            </ClockIconDiv>\n        </ProgressCard>\n    );\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { SummaryCardTick } from \"./../customIcons\";\n\nconst ProgressCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    position: relative;\n    width: 95%;\n    height: 45%;\n    border-radius: 10px;\n    border-left: 5px solid #77dd77;\n    color: ${(p) => p.theme.primaryText};\n    background-color: ${(p) => (p.theme.type === \"l\" ? \"#f0fff0\" : \"#003500\")};\n`;\n\nconst ProgressCardText = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 90%;\n    height: 45%;\n    /* background-color: #d1effa; */\n    font-weight: bold;\n    p {\n        font-size: 1.2em;\n        margin: 0;\n    }\n    span {\n        font-size: 0.7em;\n        opacity:0.6;\n    }\n`;\n\nconst absoluteIconStyles = css`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n`;\n\nconst TickIconDiv = styled.div`\n    width: ${(p) => (p.noTasks ? \"45%\" : \"20px\")};\n    ${(p) => (p.noTasks ? \"\" : absoluteIconStyles)}\n    svg {\n        color: #77dd77;\n        opacity: ${(p) => (p.noTasks ? \"0.7\" : 1)};\n    }\n`;\n\nexport function TaskProgressCard() {\n    const completedTasksCount = useSelector((s) => s.tasks.meta.completedTasksCount);\n    const totalTasksCount = useSelector((s) => s.tasks.taskArray.length);\n\n    return (\n        <ProgressCard>\n            {totalTasksCount !== 0 && (\n                <>\n                    <ProgressCardText>\n                        <p>{completedTasksCount}</p>\n                        <span>done tasks</span>\n                    </ProgressCardText>\n                    <ProgressCardText>\n                        <p>{totalTasksCount}</p>\n                        <span>total tasks</span>\n                    </ProgressCardText>\n                </>\n            )}\n\n            <TickIconDiv noTasks={totalTasksCount === 0}>\n                <SummaryCardTick />\n            </TickIconDiv>\n        </ProgressCard>\n    );\n}\n","const quotes = [\n    {\n        quote: \"We cannot solve problems with the kind of thinking we employed when we came up with them.\",\n        length: 109,\n        author: \"Albert Einstein\",\n    },\n    {\n        quote: \"Learn as if you will live forever, live like you will die tomorrow.\",\n        length: 86,\n        author: \"Mahatma Gandhi\",\n    },\n    {\n        quote:\n            \"Stay away from those people who try to disparage your ambitions. Small minds will always do that, but great minds will give you a feeling that you can become great too.\",\n        length: 183,\n        author: \"Mark Twain\",\n    },\n    {\n        quote: \"When you give joy to other people, you get more joy in return. You should give a good thought to happiness that you can give out.\",\n        length: 150,\n        author: \"Eleanor Roosevelt\",\n    },\n    {\n        quote: \"When you change your thoughts, remember to also change your world.\",\n        length: 89,\n        author: \"Norman Vincent Peale\",\n    },\n    {\n        quote: \"It is only when we take chances, when our lives improve. The initial and the most difficult risk that we need to take is to become honest.\",\n        length: 156,\n        author: \"Walter Anderson\",\n    },\n    {\n        quote: \"Nature has given us all the pieces required to achieve exceptional wellness and health, but has left it to us to put these pieces together.\",\n        length: 155,\n        author: \"Diane McLaren\",\n    },\n    {\n        quote: \"Success usually comes to those who are too busy looking for it.\",\n        length: 87,\n        author: \"Henry David Thoreau\",\n    },\n    {\n        quote: \"Develop success from failures. Discouragement and failure are two of the surest stepping stones to success.\",\n        length: 124,\n        author: \"Dale Carnegie\",\n    },\n    {\n        quote:\n            \"Success is peace of mind, which is a direct result of self-satisfaction in knowing you made the effort to become the best of which you are capable.\",\n        length: 162,\n        author: \"John Wooden\",\n    },\n    {\n        quote: \"I never dreamed about success. I worked for it.\",\n        length: 63,\n        author: \"Estée Lauder\",\n    },\n    {\n        quote: 'The pessimist sees difficulty in every opportunity. The optimist sees opportunity in every difficulty.\"',\n        length: 124,\n        author: \"Winston Churchill\",\n    },\n    {\n        quote: \"Don’t let yesterday take up too much of today.\",\n        length: 62,\n        author: \"Will Rogers\",\n    },\n    {\n        quote: \"You learn more from failure than from success. Don’t let it stop you. Failure builds character.\",\n        length: 108,\n        author: \"Unknown\",\n    },\n    {\n        quote: \"If you are working on something that you really care about, you don’t have to be pushed. The vision pulls you.\",\n        length: 125,\n        author: \"Steve Jobs\",\n    },\n    {\n        quote: \"To know how much there is to know is the beginning of learning to live.\",\n        length: 87,\n        author: \"Dorothy West\",\n    },\n    {\n        quote: \"Goal setting is the secret to a compelling future.\",\n        length: 67,\n        author: \"Tony Robbins\",\n    },\n    {\n        quote: \"Concentrate all your thoughts upon the work in hand. The sun's rays do not burn until brought to a focus.\",\n        length: 132,\n        author: \"Alexander Graham Bell\",\n    },\n    {\n        quote: \"Either you run the day or the day runs you.\",\n        length: 56,\n        author: \"Jim Rohn\",\n    },\n    {\n        quote: \"I’m a greater believer in luck, and I find the harder I work the more I have of it.\",\n        length: 104,\n        author: \"Thomas Jefferson\",\n    },\n    {\n        quote: \"When we strive to become better than we are, everything around us becomes better too.\",\n        length: 102,\n        author: \"Paulo Coelho\",\n    },\n    {\n        quote: \"Opportunity is missed by most people because it is dressed in overalls and looks like work.\",\n        length: 109,\n        author: \"Thomas Edison\",\n    },\n    {\n        quote: \"Setting goals is the first step in turning the invisible into the visible.\",\n        length: 91,\n        author: \"Tony Robbins\",\n    },\n    {\n        quote: \"The successful man will profit from his mistakes and try again in a different way.\",\n        length: 100,\n        author: \"Dale Carnegie\",\n    },\n    {\n        quote: \"A successful man is one who can lay a firm foundation with the bricks others have thrown at him.\",\n        length: 115,\n        author: \"David Brinkley\",\n    },\n    {\n        quote: \"He is a wise man who does not grieve for the things which he has not, but rejoices for those which he has.\",\n        length: 120,\n        author: \"Epictetus\",\n    },\n    {\n        quote: \"You've got to get up every morning with determination if you're going to go to bed with satisfaction.\",\n        length: 120,\n        author: \"George Lorimer\",\n    },\n    {\n        quote: \"Education is the most powerful weapon which you can use to change the world.\",\n        length: 95,\n        author: \"Nelson Mandela\",\n    },\n    {\n        quote: \"The most difficult thing is the decision to act, the rest is merely tenacity.\",\n        length: 95,\n        author: \"Amelia Earhart\",\n    },\n    {\n        quote: \"Take the attitude of a student, never be too big to ask questions, never know too much to learn something new.\",\n        length: 134,\n        author: \"Augustine Og Mandino\",\n    },\n    {\n        quote: \"The elevator to success is out of order. You’ll have to use the stairs, one step at a time.\",\n        length: 106,\n        author: \"Joe Girard\",\n    },\n    {\n        quote: \"Be a positive energy trampoline\",\n        length: 94,\n        author: \"Dave Carolan\",\n    },\n    {\n        quote: \"People often say that motivation doesn’t last. Well, neither does bathing\",\n        length: 124,\n        author: \"Zig Ziglar\",\n    },\n    {\n        quote: \"Work until your bank account looks like a phone number.\",\n        length: 68,\n        author: \"Unknown\",\n    },\n    {\n        quote: \"I am so clever that sometimes I don’t understand a single word of what I am saying.\",\n        length: 99,\n        author: \"Oscar Wilde\",\n    },\n    {\n        quote: \"I always wanted to be somebody, but now I realise I should have been more specific.\",\n        length: 99,\n        author: \"Lily Tomlin\",\n    },\n    {\n        quote: \"Just one small positive thought in the morning can change your whole day.\",\n        length: 88,\n        author: \"Dalai Lama\",\n    },\n    {\n        quote: \"Opportunities don't happen, you create them.\",\n        length: 62,\n        author: \"Chris Grosser\",\n    },\n    {\n        quote: \"Love your family, work super hard, live your passion.\",\n        length: 73,\n        author: \"Gary Vaynerchuk\",\n    },\n    {\n        quote: \"It is never too late to be what you might have been.\",\n        length: 69,\n        author: \"George Eliot\",\n    },\n    {\n        quote: \"Don't let someone else's opinion of you become your reality\",\n        length: 73,\n        author: \"Les Brown\",\n    },\n    {\n        quote: \"I am not a product of my circumstances. I am a product of my decisions.\",\n        length: 92,\n        author: \"Stephen R. Covey\",\n    },\n    {\n        quote: \"The greatest discovery of my generation is that a human being can alter his life by altering his attitudes.\",\n        length: 125,\n        author: \"William James\",\n    },\n    {\n        quote: \"One of the differences between some successful and unsuccessful people is that one group is full of doers, while the other is full of wishers.\",\n        length: 160,\n        author: \"Edmond Mbiaka\",\n    },\n    {\n        quote: \"I’d rather regret the things I’ve done than regret the things I haven’t done.\",\n        length: 93,\n        author: \"Lucille Ball\",\n    },\n    {\n        quote: \"When you arise in the morning think of what a privilege it is to be alive, to think, to enjoy, to love…\",\n        length: 123,\n        author: \"Marcus Aurelius\",\n    },\n    {\n        quote: \"Mondays are the start of the work week which offer new beginnings 52 times a year!\",\n        length: 98,\n        author: \"David Dweck\",\n    },\n    {\n        quote: \"Be miserable. Or motivate yourself. Whatever has to be done, it's always your choice.\",\n        length: 100,\n        author: \"Wayne Dyer\",\n    },\n    {\n        quote:\n            \"Your Monday morning thoughts set the tone for your whole week. See yourself getting stronger, and living a fulfilling, happier & healthier life.\",\n        length: 161,\n        author: \"Germany Kent\",\n    },\n    {\n        quote: \"Make a Friday a day to celebrate work well done that you can be proud of knowing that you just didn’t put in time to the next paycheck.\",\n        length: 153,\n        author: \"Byron Pulsifer\",\n    },\n    {\n        quote: \"You can get everything in life you want if you will just help enough other people get what they want.\",\n        length: 115,\n        author: \"Zig Ziglar\",\n    },\n    {\n        quote: \"Inspiration does exist, but it must find you working.\",\n        length: 70,\n        author: \"Pablo Picasso\",\n    },\n    {\n        quote: \"Don't settle for average. Bring your best to the moment. Then, whether it fails or succeeds, at least you know you gave all you had.\",\n        length: 150,\n        author: \"Angela Bassett\",\n    },\n    {\n        quote: \"Show up, show up, show up, and after a while the muse shows up, too.\",\n        length: 86,\n        author: \"Isabel Allende\",\n    },\n    {\n        quote: \"I have stood on a mountain of no’s for one yes.\",\n        length: 71,\n        author: \"Barbara Elaine Smith\",\n    },\n    {\n        quote: \"If you believe something needs to exist, if it's something you want to use yourself, don't let anyone ever stop you from doing it.\",\n        length: 146,\n        author: \"Tobias Lütke\",\n    },\n    {\n        quote: \"Someone's sitting in the shade today because someone planted a tree a long time ago.\",\n        length: 101,\n        author: \"Warren Buffet\",\n    },\n    {\n        quote: \"Set your goals high, and don’t stop till you get there.\",\n        length: 69,\n        author: \"Bo Jackson\",\n    },\n    {\n        quote: \"Take your victories, whatever they may be, cherish them, use them, but don’t settle for them.\",\n        length: 105,\n        author: \"Mia Hamm\",\n    },\n    {\n        quote:\n            \"Life can be much broader once you discover one simple fact: Everything around you that you call life was made up by people that were no smarter than you. And you can change it, you can influence it… Once you learn that, you'll never be the same again.\",\n        length: 265,\n        author: \"Steve Jobs\",\n    },\n    {\n        quote: \"Life is like riding a bicycle. To keep your balance you must keep moving.\",\n        length: 92,\n        author: \"Albert Einstein\",\n    },\n    {\n        quote: \"What you do speaks so loudly that I cannot hear what you say.\",\n        length: 84,\n        author: \"Ralph Waldo Emerson\",\n    },\n    {\n        quote: \"I have never let my schooling interfere with my education.\",\n        length: 72,\n        author: \"Mark Twain\",\n    },\n    {\n        quote: \"Live out of your imagination, not your history.\",\n        length: 64,\n        author: \"Stephen Covey\",\n    },\n    {\n        quote: \"Do not wait for the perfect time and place to enter, for you are already onstage.\",\n        length: 92,\n        author: \"Unknown\",\n    },\n    {\n        quote: \"I will not lose, for even in defeat, there’s a valuable lesson learned, so it evens up for me.\",\n        length: 103,\n        author: \"Jay-Z\",\n    },\n    {\n        quote: \"I do not try to dance better than anyone else. I only try to dance better than myself.\",\n        length: 108,\n        author: \"Arianna Huffington\",\n    },\n    {\n        quote: \"If you don’t risk anything, you risk even more.\",\n        length: 61,\n        author: \"Erica Jong\",\n    },\n    {\n        quote: \"Failure is simply the opportunity to begin again, this time more intelligently.\",\n        length: 94,\n        author: \"Henry Ford\",\n    },\n    {\n        quote: \"Our greatest glory is not in never falling, but in rising every time we fall.\",\n        length: 92,\n        author: \"Confucius\",\n    },\n    {\n        quote: \"If you change the way you look at things, the things you look at change.\",\n        length: 87,\n        author: \"Wayne Dyer\",\n    },\n    {\n        quote: \"We must reach out our hand in friendship and dignity both to those who would befriend us and those who would be our enemy.\",\n        length: 138,\n        author: \"Arthur Ashe\",\n    },\n    {\n        quote: \"It's fine to celebrate success but it is more important to heed the lessons of failure.\",\n        length: 102,\n        author: \"Bill Gates\",\n    },\n    {\n        quote: \"We need to accept that we won’t always make the right decisions, that we’ll screw up royally sometimes\",\n        length: 207,\n        author: \"Ariana Huffington\",\n    },\n    {\n        quote: \"When everything seems to be going against you, remember that the airplane takes off against the wind, not with it.\",\n        length: 129,\n        author: \"Henry Ford\",\n    },\n    {\n        quote: \"You cannot always control what goes on outside. But you can always control what goes on inside.\",\n        length: 110,\n        author: \"Wayne Dyer\",\n    },\n    {\n        quote: \"We are what we repeatedly do. Excellence, then, is not an act, but a habit.\",\n        length: 89,\n        author: \"Aristotle\",\n    },\n    {\n        quote: \"Start where you are. Use what you have. Do what you can.\",\n        length: 72,\n        author: \"Arthur Ashe\",\n    },\n    {\n        quote: \"Hustle beats talent when talent doesn’t hustle\",\n        length: 64,\n        author: \"Ross Simmonds\",\n    },\n    {\n        quote: \"Everything you've ever wanted is sitting on the other side of fear.\",\n        length: 85,\n        author: \"George Addair\",\n    },\n    {\n        quote: \"The question isn't who is going to let me; it's who is going to stop me.\",\n        length: 85,\n        author: \"Ayn Rand\",\n    },\n    {\n        quote: \"Every strike brings me closer to the next home run.\",\n        length: 65,\n        author: \"Babe Ruth\",\n    },\n    {\n        quote: \"I have not failed. I've just found 10,000 ways that won't work.\",\n        length: 84,\n        author: \"Thomas A. Edison\",\n    },\n    {\n        quote: \"Don’t worry about failure; you only have to be right once.\",\n        length: 74,\n        author: \"Drew Houston\",\n    },\n    {\n        quote: \"You carry the passport to your own happiness.\",\n        length: 70,\n        author: \"Diane von Furstenberg\",\n    },\n    {\n        quote: \"Never let success get to your head and never let failure get to your heart.\",\n        length: 84,\n        author: \"Drake\",\n    },\n    {\n        quote: \"Ideation without execution is delusion.\",\n        length: 56,\n        author: \"Robin Sharma\",\n    },\n    {\n        quote: \"It is a rough road that leads to the heights of greatness.\",\n        length: 83,\n        author: \"Lucius Annaeus Seneca\",\n    },\n    {\n        quote: \"For the great doesn’t happen through impulse alone, and is a succession of little things that are brought together.\",\n        length: 135,\n        author: \"Vincent van Gogh\",\n    },\n    {\n        quote: \"If we take care of the moments, the years will take care of themselves.\",\n        length: 90,\n        author: \"Maria Edgeworth\",\n    },\n    {\n        quote: \"Resilience is when you address uncertainty with flexibility.\",\n        length: 71,\n        author: \"Unknown\",\n    },\n    {\n        quote: \"Sometimes magic is just someone spending more time on something than anyone else might reasonably expect.\",\n        length: 130,\n        author: \"Raymond Joseph Teller\",\n    },\n    {\n        quote:\n            \"As a single footstep will not make a path on the earth, so a single thought will not make a pathway in the mind. To make a deep physical path, we walk again and again. To make a deep mental path, we must think over and over the kind of thoughts we wish to dominate our lives.\",\n        length: 298,\n        author: \"Henry David Thoreau\",\n    },\n    {\n        quote: \"Never give up on a dream just because of the time it will take to accomplish it. The time will pass anyway.\",\n        length: 127,\n        author: \"Earl Nightingale\",\n    },\n    {\n        quote: \"True humility is not thinking less of yourself; it is thinking of yourself less.\",\n        length: 95,\n        author: \"C.S. Lewis\",\n    },\n    {\n        quote: \"The two most important days in your life are the day you’re born and the day you find out why.\",\n        length: 109,\n        author: \"Mark Twain\",\n    },\n    {\n        quote: \"Nothing ever goes away until it teaches us what we need to know.\",\n        length: 81,\n        author: \"Pema Chodron\",\n    },\n    {\n        quote: \"If there is no struggle, there is no progress.\",\n        length: 68,\n        author: \"Frederick Douglass\",\n    },\n    {\n        quote: \"Courage is like a muscle. We strengthen it by use.\",\n        length: 64,\n        author: \"Ruth Gordo\",\n    },\n    {\n        quote: \"If you don’t like the road you’re walking, start paving another one.\",\n        length: 84,\n        author: \"Dolly Parton\",\n    },\n    {\n        quote: \"If it makes you nervous, you’re doing it right.\",\n        length: 67,\n        author: \"Childish Gambino\",\n    },\n    {\n        quote: \"What you do makes a difference, and you have to decide what kind of difference you want to make.\",\n        length: 112,\n        author: \"Jane Goodall\",\n    },\n    {\n        quote: \"I choose to make the rest of my life the best of my life.\",\n        length: 71,\n        author: \"Louise Hay\",\n    },\n    {\n        quote: \"In order to be irreplaceable one must always be different.\",\n        length: 73,\n        author: \"Coco Chanel\",\n    },\n    {\n        quote: \"Anything can make me stop and look and wonder, and sometimes learn.\",\n        length: 84,\n        author: \"Kurt Vonnegut\",\n    },\n    {\n        quote: \"People's passion and desire for authenticity is strong.\",\n        length: 71,\n        author: \"Constance Wu\",\n    },\n    {\n        quote: \"A surplus of effort could overcome a deficit of confidence.\",\n        length: 78,\n        author: \"Sonia Sotomayor\",\n    },\n    {\n        quote: \"Doubt is a killer. You just have to know who you are and what you stand for.\",\n        length: 94,\n        author: \"Jennifer Lopez\",\n    },\n    {\n        quote: \"No one changes the world who isn’t obsessed.\",\n        length: 64,\n        author: \"Billie Jean King\",\n    },\n    {\n        quote: \"I learned a long time ago that there is something worse than missing the goal, and that’s not pulling the trigger.\",\n        length: 126,\n        author: \"Mia Hamm\",\n    },\n    {\n        quote: \"Some people want it to happen, some wish it would happen, others make it happen.\",\n        length: 98,\n        author: \"Michael Jordan\",\n    },\n    {\n        quote:\n            \"It is remarkable how much long-term advantage people like us have gotten by trying to be consistently not stupid, instead of trying to be very intelligent.\",\n        length: 173,\n        author: \"Charlie Munger\",\n    },\n    {\n        quote: \"The standard you walk past, is the standard you accept.\",\n        length: 71,\n        author: \"David Hurley\",\n    },\n    {\n        quote: \"Perfection is not attainable. But if we chase perfection we can catch excellence.\",\n        length: 99,\n        author: \"Vince Lombardi\",\n    },\n    {\n        quote: \"Get a good idea and stay with it. Dog it, and work at it until it’s done right.\",\n        length: 94,\n        author: \"Walt Disney\",\n    },\n    {\n        quote: \"Optimism is the faith that leads to achievement. Nothing can be done without hope and confidence.\",\n        length: 113,\n        author: \"Helen Keller\",\n    },\n];\n\nexport function getTodaysQuote() {\n    var now = new Date();\n    var start = new Date(now.getFullYear(), 0, 0);\n    var diff = now - start + (start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000;\n    var oneDay = 1000 * 60 * 60 * 24;\n    var day = Math.floor(diff / oneDay);\n    return quotes[day % 150];\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { LabelPie } from \"./../../components/MiscBoard/LabelPie\";\nimport { ProgressRings } from \"./../../components/MiscBoard/ProgressRings\";\nimport { TimeProgressCard } from \"./../../components/MiscBoard/TimeProgressCard\";\nimport { TaskProgressCard } from \"./../../components/MiscBoard/TaskProgressCard\";\nimport { getTodaysQuote } from \"./../../helpers/quotes\";\n\nconst MiscBoardContainer = styled.div`\n    flex: 1 1 0;\n    min-width: 346px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: center;\n    height: 100%;\n    /* background-color:orange; */\n`;\n\nconst MainSummaryContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    width: 80%;\n    max-width: 326px;\n    height: 226px;\n    margin: 10px 0;\n    border-radius: 20px;\n    background-color:${p=>p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    /* backface-visibility: hidden;\n    transform: translateZ(0);\n    transition: box-shadow 0.2s ease-in-out,transform 0.2s ease-in-out ;\n    &:hover {\n        transform: scale(1.02);\n        -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n        box-shadow: 0 2px 10px rgba(166, 173, 201, 0.8);\n    } */\n`;\n\nconst ProgressRingContainer = styled.div`\n    display: flex;\n    width: 50%;\n    height: 95%;\n    border-radius: 10px;\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);*/\n    /* background-color: #f7f7fa;  */\n`;\n\nconst ProgressCardContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 40%;\n    height: 95%;\n    border-radius: 10px;\n    /* -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    background-color: #f7adfa; */\n`;\n\nconst QuoteAndLabelContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 80%;\n    max-width: 326px;\n    height: 186px;\n    margin: 10px 0;\n    /* background-color: purple; */\n`;\n\nconst LabelPieContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 45%;\n    height: 90%;\n    border-radius: 10px;\n    background-color:${p=>p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n\nfunction getQuoteFontSize(letterCount){\n    let size = -0.0035*letterCount+1.3; // eqn of line with 40 - 1.1em and 180 - 0.6em\n    size = size.toPrecision(3);\n    return `${size}em`\n}\nconst QuoteContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 50%;\n    height: 100%;\n    border-radius: 10px;\n    position: relative;\n    backface-visibility: hidden;\n    -webkit-backface-visibility: hidden;\n    transform: translateZ(0);\n    font-weight: bold;\n    color:${p=>p.theme.primaryText};\n    p {\n        margin: 0 3px;\n        font-size: ${p=>getQuoteFontSize(p.length)};\n        &::before{\n            color:#fabb18;\n            content:\"“ \";\n        }\n        &::after{\n            color:#fabb18;\n            content:\" ”\";\n        }\n    }\n    span {\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        margin: 5px;\n        font-size: 0.65em;\n        color:#fabb18;\n    }\n    transition: transform 0.2s ease-in-out;\n    &:hover {\n        transform: scale(1.2);\n    }\n`;\n\nexport function MiscBoard() {\n\n    let todaysQuote = getTodaysQuote();\n    return (\n        <MiscBoardContainer>\n            <MainSummaryContainer>\n                <ProgressRingContainer>\n                    <ProgressRings />\n                </ProgressRingContainer>\n                <ProgressCardContainer>\n                    <TaskProgressCard />\n                    <TimeProgressCard />\n                </ProgressCardContainer>\n            </MainSummaryContainer>\n\n            <QuoteAndLabelContainer>\n                <QuoteContainer length={todaysQuote.length}>\n                    <p>\n                        {todaysQuote.quote}\n                    </p>\n                    <span>&mdash; {todaysQuote.author} </span>\n                </QuoteContainer>\n                <LabelPieContainer>\n                    <LabelPie />\n                </LabelPieContainer>\n            </QuoteAndLabelContainer>\n        </MiscBoardContainer>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FocusBoard } from \"../focusBoard/FocusBoard\";\nimport { MiscBoard } from \"../miscBoard/MiscBoard\";\n\nconst DashboardMainContainer = styled.div`\n    flex: 3 1 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* background-color: red; */\n`;\n\nexport function DashboardMain() {\n    return (\n        <DashboardMainContainer>\n            <MiscBoard />\n            <FocusBoard />\n        </DashboardMainContainer>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { DashboardHero } from \"./DashboardHero\";\nimport { DashboardMain } from \"./DashboardMain\";\n\nconst DashboardContainer = styled.div`\n    flex: 2 1 0;\n    display: flex;\n    flex-direction: column;\n    border-radius: 0 20px 20px 0;\n    background-color: ${(p) => p.theme.backgroundMain};\n    -webkit-box-shadow: 2px 0 5px -2px rgba(166, 173, 201, 0.8);\n    box-shadow: 2px 0 5px -2px rgba(166, 173, 201, 0.8);\n`;\n\nexport default function Dashboard() {\n    return (\n        <DashboardContainer>\n            <DashboardHero />\n            <DashboardMain />\n        </DashboardContainer>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/bulb.b245cbae.svg\";","export default __webpack_public_path__ + \"static/media/glowBulb.b782ade4.svg\";","export default __webpack_public_path__ + \"static/media/tickmark.dda26bd1.svg\";","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst TaskSelectInput = styled.select`\n    font-weight: bold;\n    text-align: center;\n    border:0;\n    background-color:${p=>p.theme.backgroundSecondary};\n    color:${p=>p.theme.primaryText};\n    option{\n        font-weight:bold;\n    }\n`;\n\nexport default function TaskLabel(p) {\n    const labels = useSelector((s) => s.tasks.labels);\n    const [updatedLabel, setUpdatedLabel] = useState(p.taskLabel);\n\n    return (\n        // <div style={{ height: \"100%\", width: 80 }}>\n        <TaskSelectInput\n        autoFocus\n            name=\"labels\"\n            onBlur={() => p.onBlur(p.taskId,p.taskLabel, updatedLabel)}\n            defaultValue={updatedLabel}\n            onChange={(e) => setUpdatedLabel(e.target.value)}\n            onKeyDown={(e) => (e.key === \"Enter\" ? p.onBlur(p.taskId,p.taskLabel, updatedLabel) : null)}\n        >\n            <option value=\"none\">none</option> \n            {/* keeping option:none at top makes it show up if taskLabel is null which is desired */}\n            {Object.keys(labels).map((e, idx) => (\n                <option style={{color:`${labels[e].color}`}} key={idx} value={e}>\n                    {e}\n                </option>\n            ))}\n        </TaskSelectInput>\n        // </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { remove, updateTaskContent, toggleIsCompleted, rearrange, updateTaskTime } from \"../../containers/taskBoard/taskBoardSlice\";\nimport {\n    focusOnTask,\n    resetFocussedTask,\n    toggleIsRunning,\n    updateTaskLabel,\n    updateLabelCount,\n    toggleSoundscapeState,\n} from \"../../containers/taskBoard/taskBoardSlice\";\nimport styled from \"styled-components\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { DragIcon } from \"./../customIcons\";\nimport { formattedTimeString } from \"../../helpers\";\nimport bulb from \"./../../images/bulb.svg\";\nimport glowBulb from \"./../../images/glowBulb.svg\";\nimport tickmark from \"./../../images/tickmark.svg\";\nimport TaskLabelSelect from \"./../../components/TaskBoard/TaskLabelSelect\";\n\nconst TaskCardContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 376px; // % not working here (maybe due to animation library wrappers)\n    height: 110px;\n    margin-top: 15px;\n    cursor: default !important;\n    /* background-color: #fff4e1; */\n`;\n\nconst TaskCardDragIcon = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 5%;\n    height: 100%;\n    /* background-color: #ff09ac; */\n    svg {\n        cursor: url(\"https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur\"), default !important;\n        color:${p=>p.theme.primaryText};\n    }\n`;\n\nconst getTaskCardDivBorderLabelColor = (labelColor) => (labelColor !== null ? `7px solid ${labelColor}` : \"none\");\n\nconst TaskCardDiv = styled.div`\n    display: flex;\n    justify-content: space-around;\n    flex-direction: row;\n    height: 100%;\n    width: 90%;\n    border-radius: 10px;\n    border-right: ${(p) => getTaskCardDivBorderLabelColor(p.labelColor)};\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    -webkit-box-shadow: ${(p) => (p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\")};\n    box-shadow: ${(p) => (p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\")};\n`;\n\nconst TaskStatusDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 15%;\n    /* background-color: #f8f8ff; */\n    position: relative;\n    color: ${(p) => p.theme.primaryText};\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.7em;\n        cursor: text;\n    }\n    img {\n        width: ${(p) => (p.isCompleted ? \"40px\" : \"60px\")};\n    }\n`;\n\nconst TaskDetailsDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height: 100%;\n    width: 75%;\n    /* margin: 0 0 0 10px; */\n    /* background-color: #fff1fc; */\n`;\n\nconst TaskContentDiv = styled.div`\n    display: flex;\n    align-items: center;\n    height: 65%;\n    margin: 0 0 0 5px;\n    word-wrap: break-word;\n    color: ${(p) => p.theme.primaryText};\n    /* background-color: #fffcec; */\n    p {\n        font-size: 0.9em;\n        font-weight: bold;\n        min-width: 0;\n        cursor: text;\n    }\n`;\n\nconst TaskEditInput = styled.textarea`\n    resize: none;\n    height: 90%;\n    width: 100%;\n    font-size: 0.9em;\n    overflow: hidden;\n    vertical-align: center;\n    font-weight: bold;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${(p) => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 5px;\n    }\n`;\n\nconst TimeEditInput = styled.input`\n    height: 15px;\n    width: 30px;\n    margin-top: 5px;\n    text-align: center;\n    font-weight: bold;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${(p) => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 2px;\n    }\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    }\n`;\n\nconst TaskActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    color: ${(p) => p.theme.primaryText};\n    &:hover {\n        background-color: #fabb18;\n        p {\n            color: ${(p) => p.theme.secondaryText};\n        }\n    }\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n\nconst TaskLabelContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    &:hover {\n        background-color: ${(p) => (p.theme.type === \"l\" ? \"#f7f7fa\" : \"#121212\")};\n    }\n    p {\n        margin: 5px;\n        color: ${(p) => (p.labelColor !== null ? p.labelColor : \"#c1c1d7\")};\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n\nconst TaskDeleteButton = styled.div`\n    height: 80%;\n    cursor: pointer;\n    margin-left: auto;\n    color: #fabb18;\n    &:hover {\n        color: red;\n    }\n`;\n\nconst TaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n    /* background-color: #fffa91; */\n    svg {\n        font-size: 0.8em;\n        margin: 5px;\n    }\n`;\n\nfunction previewTask(str) {\n    if (str.length <= 60) return str;\n    else return str.substring(0, 60) + \"...\";\n}\n\nexport default function TaskCard({ task, taskIndex, focussedTaskGlobalKey, forwardRBDProvided, isFocussed, focussedTaskIndex }) {\n    const dispatch = useDispatch();\n\n    const [taskUnderEdit, setTaskUnderEdit] = useState(false);\n    const [updatedTaskContent, setUpdatedTaskContent] = useState(task.content);\n    const [timeUnderEdit, setTimeUnderEdit] = useState(false);\n    const [updatedTime, setUpdatedTime] = useState(Math.floor(task.time / 1000 / 60));\n    const [labelUnderEdit, setLabelUnderEdit] = useState(false);\n    const [showDragIcon, setShowDragIcon] = useState(false);\n\n    const labels = useSelector((s) => s.tasks.labels);\n\n    function submitUpdatedTaskContent(e) {\n        if (e.key === \"Enter\" && updatedTaskContent.trim().length >= 3) {\n            dispatch(updateTaskContent({ id: task.id, updatedTaskContent }));\n            setTaskUnderEdit(false);\n        }\n    }\n    function submitUpdatedTime(e) {\n        if (e.key === \"Enter\") {\n            dispatch(updateTaskTime({ id: task.id, updatedTime }));\n            setTimeUnderEdit(false);\n        }\n    }\n\n    function labelSelectOnBlurHandler(taskId, taskLabel, updatedLabel) {\n        setLabelUnderEdit(false);\n        updatedLabel = updatedLabel === \"none\" ? null : updatedLabel;\n        dispatch(updateTaskLabel({ id: taskId, label: updatedLabel }));\n        if (taskLabel !== updatedLabel) dispatch(updateLabelCount({ oldLabel: taskLabel, newLabel: updatedLabel }));\n    }\n\n    return (\n        <Flipped flipId={`${task.id}`}>\n            <TaskCardContainer\n                ref={forwardRBDProvided.innerRef}\n                {...forwardRBDProvided.draggableProps}\n                {...forwardRBDProvided.dragHandleProps}\n                onMouseEnter={() => setShowDragIcon(!task.isCompleted && true)}\n                onMouseLeave={() => setShowDragIcon(!task.isCompleted && false)}\n            >\n                <TaskCardDragIcon>{showDragIcon && <DragIcon />}</TaskCardDragIcon>\n\n                <TaskCardDiv isFocussed={isFocussed} labelColor={task.label !== null ? labels[task.label].color : null}>\n                    <TaskStatusDiv isFocussed={isFocussed} isCompleted={task.isCompleted}>\n                        {task.isCompleted ? (\n                            <img src={tickmark} alt=\"Done\" />\n                        ) : isFocussed ? (\n                            <img src={glowBulb} alt=\"Focussed\" />\n                        ) : (\n                            <img src={bulb} alt=\"Unfocussed\" />\n                        )}\n                        {!task.isCompleted &&\n                            (timeUnderEdit ? (\n                                <TimeEditInput\n                                    type=\"number\"\n                                    autoFocus\n                                    value={updatedTime}\n                                    onBlur={() => {\n                                        dispatch(updateTaskTime({ id: task.id, updatedTime }));\n                                        setTimeUnderEdit(false);\n                                    }}\n                                    onKeyDown={submitUpdatedTime}\n                                    onChange={(e) => setUpdatedTime(e.target.value)}\n                                />\n                            ) : (\n                                <p onDoubleClick={() => setTimeUnderEdit(true)}>{formattedTimeString(task.remainingTime)}</p>\n                            ))}\n                    </TaskStatusDiv>\n\n                    <TaskDetailsDiv>\n                        <TaskContentDiv>\n                            {taskUnderEdit ? (\n                                <TaskEditInput\n                                    type=\"text\"\n                                    autoFocus\n                                    value={updatedTaskContent}\n                                    onBlur={() => {\n                                        dispatch(updateTaskContent({ id: task.id, updatedTaskContent }));\n                                        setTaskUnderEdit(false);\n                                    }}\n                                    onKeyDown={submitUpdatedTaskContent}\n                                    onChange={(e) => setUpdatedTaskContent(e.target.value)}\n                                />\n                            ) : (\n                                <p onDoubleClick={() => setTaskUnderEdit(true)}>{previewTask(task.content)}</p>\n                            )}\n                        </TaskContentDiv>\n\n                        <TaskControllerDiv>\n                            {!task.isCompleted && (\n                                <TaskActionButton\n                                    isDoneBtn={false}\n                                    onClick={\n                                        isFocussed\n                                            ? () => {\n                                                  if (task.isRunning) dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n                                                  dispatch(resetFocussedTask());\n                                                  dispatch(toggleSoundscapeState(false));\n                                              }\n                                            : () => {\n                                                  if (focussedTaskIndex !== -1) dispatch(toggleIsRunning({ idx: focussedTaskIndex, val: false }));\n                                                  dispatch(toggleSoundscapeState(false));\n                                                  dispatch(focusOnTask(taskIndex));\n                                              }\n                                    }\n                                >\n                                    <p>{isFocussed ? \"Unfocus\" : \"Focus\"}</p>\n                                </TaskActionButton>\n                            )}\n\n                            <TaskActionButton\n                                isDoneBtn={true}\n                                onClick={\n                                    task.isCompleted\n                                        ? (e) => {\n                                              if (focussedTaskIndex !== -1 && focussedTaskGlobalKey < task.globalKey) {\n                                                  dispatch(focusOnTask(focussedTaskIndex + 1));\n                                              }\n                                              dispatch(toggleIsCompleted(task.id));\n                                              dispatch(rearrange({ id: task.id, markedAsComplete: false }));\n                                              e.stopPropagation();\n                                          }\n                                        : (e) => {\n                                              if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                                              if (task.isRunning) dispatch(toggleIsRunning({ idx: taskIndex }));\n                                              if (isFocussed) dispatch(resetFocussedTask());\n                                              dispatch(toggleIsCompleted(task.id));\n                                              dispatch(rearrange({ id: task.id, markedAsComplete: true }));\n                                              if (taskIndex === focussedTaskIndex) dispatch(toggleSoundscapeState(false));\n                                              e.stopPropagation();\n                                          }\n                                }\n                            >\n                                <p>{task.isCompleted ? \"Undone\" : \"Done\"}</p>\n                            </TaskActionButton>\n\n                            <TaskLabelContainer onClick={() => setLabelUnderEdit(true)} labelColor={task.label !== null ? labels[task.label].color : null}>\n                                {labelUnderEdit ? (\n                                    <TaskLabelSelect onBlur={labelSelectOnBlurHandler} taskId={task.id} taskLabel={task.label} />\n                                ) : task.label !== null ? (\n                                    <p>#{task.label}</p>\n                                ) : (\n                                    <p>Add label</p>\n                                )}\n                            </TaskLabelContainer>\n\n                            {!isFocussed && (\n                                <TaskDeleteButton\n                                    onClick={(e) => {\n                                        if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                                        dispatch(remove(task.id));\n                                        if (task.label !== null) dispatch(updateLabelCount({ oldLabel: task.label, newLabel: null }));\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <BsTrash />\n                                </TaskDeleteButton>\n                            )}\n                        </TaskControllerDiv>\n                    </TaskDetailsDiv>\n                </TaskCardDiv>\n            </TaskCardContainer>\n        </Flipped>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { debounce, getFormattedListTimeSummary } from \"../../helpers\";\nimport { FaClock } from \"react-icons/fa\";\n\nconst TaskFeedbackContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    margin: 0 0 10px 0;\n`;\n\nconst RemainingTaskListTimeDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color:${p=>p.theme.primaryText};\n    p {\n        margin: 0 3px;\n        font-weight: bold;\n        font-size: 0.8em;\n    }\n    svg {\n        font-size: 0.8em;\n        margin: 0 3px;\n    }\n    span {\n        margin: 0 2px;\n        font-size: 0.8em;\n    }\n`;\n\nconst ErrorMessage = styled.div`\n    display: flex;\n    align-items: center;\n    color: red;\n    p {\n        margin: 0;\n        font-size: 0.8em;\n    }\n`;\n\nexport function TaskFeedback({ task, time, setInputValid }) {\n    let [error, setError] = useState(undefined);\n\n    useEffect(() => {\n        let errorGenerated = false;\n        if (task !== undefined) {\n            // if time is there, it should be stripped and validated first before the actual task content\n            let temp = task?.trim().split(\" \");\n            if (temp !== undefined && !isNaN(parseInt(temp[temp.length - 1]))) {\n                let taskTime = parseInt(temp.pop());\n                if (taskTime <= 0) {\n                    setError(\"Hmmm. Time for this task seems weird,no?\");\n                    errorGenerated = true;\n                    setInputValid(false);\n                    return;\n                } else if (taskTime > 120) {\n                    setError(\"Time should be <120mins for better focus !\");\n                    errorGenerated = true;\n                    setInputValid(false);\n                    return;\n                }\n            }\n            temp = temp?.join(\" \");\n\n            if (temp?.length === 0) {\n                setError(undefined);\n                errorGenerated = true;\n                setInputValid(false);\n            } else if (temp?.length < 3) {\n                setError(\"Task should be atleast 3 characters long.\");\n                errorGenerated = true;\n                setInputValid(false);\n            } else if (temp?.length > 100) {\n                setError(\"Hey, that's too long. Keep it short and simple.\");\n                errorGenerated = true;\n                setInputValid(false);\n            } else {\n                setError(undefined);\n                setInputValid(true);\n            }\n        }\n\n        if (!errorGenerated) {\n            // will check for error in time only if no error in task\n            if (time !== undefined && time !== \"\") {\n                let numericTime = parseInt(time);\n                if (numericTime <= 0 || numericTime > 120) {\n                    setError(\"Time should be between 1-120 mins\");\n                    setInputValid(false);\n                } else {\n                    setError(undefined);\n                    setInputValid(true);\n                }\n            }\n        }\n    }, [task, time, setInputValid]);\n\n    const remainingTaskListTime = useSelector((s) => s.tasks.meta.remainingTaskListTime);\n    const rTLTObj = getFormattedListTimeSummary(remainingTaskListTime);\n    let rTLTHours = rTLTObj.hours;\n    let rTLTMins = rTLTObj.mins;\n\n    return (\n        <TaskFeedbackContainer>\n            {error === undefined ? (\n                <RemainingTaskListTimeDiv>\n                    {remainingTaskListTime === 0 ? (\n                        <p>Create New Tasks</p>\n                    ) : (\n                        <>\n                            <FaClock />\n                            <p>list time:</p>\n                            {rTLTHours !== \"0\" && <span>{rTLTHours}h</span>}\n                            {rTLTMins !== \"00\" && <span>{rTLTMins}m</span>}\n                        </>\n                    )}\n                </RemainingTaskListTimeDiv>\n            ) : (\n                <ErrorMessage>\n                    <p>{error}</p>\n                </ErrorMessage>\n            )}\n        </TaskFeedbackContainer>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { create, incrementGlobalKey, focusOnTask, updateLabelCount } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport styled from \"styled-components\";\nimport { AiFillPlusCircle, AiFillClockCircle } from \"react-icons/ai\";\nimport { TaskFeedback } from \"./TaskFeedback\";\nimport { debounce } from \"../../helpers\";\n\nconst TaskInputContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 20px 0 10px 0;\n    width: 90%;\n    max-width: 396px;\n    border-radius: 10px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    height: 50px;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\n`;\n\nconst TaskContentInputDiv = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 90%;\n    width: 70%;\n    margin-left: 10px;\n    svg {\n        font-size: 1.3em;\n        margin-right: 5px;\n        color: #fabb18;\n    }\n`;\n\nconst TaskContentInputField = styled.input`\n    height: 100%;\n    width: 90%;\n    font-size: 0.9em;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    border: 0;\n    outline: none;\n    font-weight: bold;\n    &::placeholder {\n        color: #c1c1d7;\n    }\n`;\n\nconst TaskTimeInputDiv = styled.div`\n    display: flex;\n    align-items: center;\n    height: 90%;\n    width: 25%;\n    color: #c1c1d7;\n    span {\n        font-size: 0.7em;\n        font-weight: bold;\n    }\n    svg {\n        font-size: 1.2em;\n        color: #fabb18;\n    }\n`;\n\nconst TaskTimeInputField = styled.input`\n    height: 100%;\n    width: 30%;\n    font-size: 0.9em;\n    text-align: center;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    border: 0;\n    outline: none;\n    font-weight: bold;\n    &::placeholder {\n        color: #c1c1d7;\n    }\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    }\n`;\n\nexport default function TaskInput() {\n\n    const defaultTime = useSelector((s) => s.settings.defaultTime);\n    const defaultLabel = useSelector((s) => s.settings.defaultLabel);\n\n    const [task, setTask] = useState(\"\");\n    const [time, setTime] = useState(defaultTime);\n\n    const [generateFeedbackForTask, setGenerateFeedbackForTask] = useState(undefined);\n    const [generateFeedbackForTime, setGenerateFeedbackForTime] = useState(undefined);\n    const [isInputValid,setInputValid] = useState(false);\n\n    let taskContentInputRef, taskTimeInputRef;\n    const meta = useSelector((s) => s.tasks.meta);\n    const labels = useSelector((s) => s.tasks.labels);\n    const dispatch = useDispatch();\n\n    function submitTask(e) {\n        if (e.key === \"Enter\" && task.trim().length >= 1 && isInputValid) {\n            let temp = task.trim().split(\" \");\n            // add a max time limit\n            let taskTime = time;\n            let label = defaultLabel;\n            if (temp.length !== 1) {\n                if (!isNaN(parseInt(temp[temp.length - 1]))) {\n                    taskTime = parseInt(temp.pop());\n                } else if (temp[temp.length - 1][0] === \"#\" && temp[temp.length - 1].length > 1 && \"wpfmeWPFME\".includes(temp[temp.length - 1][1])) {\n                    let userLabel = temp[temp.length - 1].substring(1).toLowerCase();\n                    let found = false;\n                    for (let validLabel in labels) {\n                        found = validLabel.includes(userLabel);\n                        console.log(userLabel, validLabel);\n                        if (found) {\n                            label = validLabel;\n                            temp.pop();\n                            break;\n                        }\n                    }\n                }\n            }\n\n            temp = temp.join(\" \");\n            let newTask = {\n                id: Math.floor(Math.random() * 10000),\n                globalKey: meta.globalKey,\n                content: temp,\n                time: taskTime,\n                remainingTime: taskTime,\n                isRunning: false,\n                isCompleted: false,\n                createdAt: new Date().toISOString(),\n                label: label,\n            };\n            if (meta.focussedTaskIndex !== -1) dispatch(focusOnTask(meta.focussedTaskIndex + 1));\n            dispatch(create(newTask));\n            dispatch(incrementGlobalKey());\n            if (label !== null) dispatch(updateLabelCount({ oldLabel: null, newLabel: label }));\n            setTask(\"\");\n            setTime(defaultTime);\n            taskContentInputRef.value = \"\";\n            taskTimeInputRef.value = \"\";\n            taskContentInputRef.focus();\n        }\n    }\n\n    const debouncedGenerateInputFeedback = useCallback(\n        debounce((task, time) => {\n            if (task !== undefined) setGenerateFeedbackForTask(task);\n            if (time !== undefined) setGenerateFeedbackForTime(time);\n        }, 150),\n        []\n    );\n\n    function onTaskInputChangeHandler(task) {\n        setTask(task);\n        debouncedGenerateInputFeedback(task, undefined);\n    }\n\n    function onTimeInputChangeHandler(time) {\n        setTime(time);\n        debouncedGenerateInputFeedback(undefined, time);\n    }\n\n    // improve logic - both onKeyDown and onChange executing - combining will be better.\n    return (\n        <>\n            <TaskInputContainer>\n                <TaskContentInputDiv>\n                    <AiFillPlusCircle onClick={() => taskContentInputRef.focus()} />\n                    <TaskContentInputField\n                        type=\"text\"\n                        placeholder=\"i have to focus on ...\"\n                        ref={(el) => (taskContentInputRef = el)}\n                        onChange={(e) => onTaskInputChangeHandler(e.target.value)}\n                        onKeyDown={submitTask}\n                    />\n                </TaskContentInputDiv>\n                <TaskTimeInputDiv>\n                    <AiFillClockCircle onClick={() => taskTimeInputRef.focus()} />\n                    <TaskTimeInputField\n                        type=\"number\"\n                        placeholder={defaultTime}\n                        ref={(el) => (taskTimeInputRef = el)}\n                        onChange={(e) => onTimeInputChangeHandler(e.target.value)}\n                        onKeyDown={submitTask}\n                    />\n                    <span>mins</span>\n                </TaskTimeInputDiv>\n            </TaskInputContainer>\n            <TaskFeedback task={generateFeedbackForTask} time={generateFeedbackForTime} setInputValid={setInputValid}/>\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { BiShow, BiHide } from \"react-icons/bi\";\nimport { AiOutlineClear } from \"react-icons/ai\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearCompletedTasks, toggleShowCompletedTasks } from \"./../../containers/taskBoard/taskBoardSlice\";\n\nconst DoneTasksDivider = styled.div`\n    display: flex;\n    margin: 15px 0 15px 25px;\n`;\nconst DividerLine = styled.div`\n    width: 100%;\n    position: relative;\n    margin: 15px;\n    border-bottom: 3px solid #FABB18;\n`;\n\nconst DividerIcon = styled.div`\n    width: 90px;\n    position: relative;\n    top: 3px;\n    color: #FABB18;\n    p {\n        margin: 0;\n        font-weight: bold;\n        letter-spacing:${(p)=>p.showCompletedTasks?\"3px\":\"1px\"};\n    }\n`;\n\nconst DividerActionDiv = styled.div`\n    display: flex;\n    width: 70px;\n    height: 30px;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 5px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    svg {\n        color: #FABB18;\n        cursor:pointer;\n    }\n`;\n\nexport default function Divider() {\n    const [showActionBtn, setShowActionBtn] = useState(false);\n    const showCompletedTasks = useSelector((s) => s.tasks.meta.showCompletedTasks);\n    const completedTasksCount = useSelector((s)=>s.tasks.meta.completedTasksCount);\n    const dispatch = useDispatch();\n    return (\n        <Flipped flipId={`-1`}>\n            <DoneTasksDivider>\n                <DividerLine />\n                <DividerIcon showCompletedTasks={showCompletedTasks} onMouseEnter={() => setShowActionBtn(true)} onMouseLeave={() => setShowActionBtn(false)}>\n                    {showActionBtn ? (\n                        <DividerActionDiv>\n                            {showCompletedTasks ? (\n                                <BiHide onClick={() => dispatch(toggleShowCompletedTasks())} />\n                            ) : (\n                                <BiShow onClick={() => dispatch(toggleShowCompletedTasks())} />\n                            )}\n                            <AiOutlineClear onClick={() => dispatch(clearCompletedTasks())} />\n                        </DividerActionDiv>\n                    ) : (\n                        <p>{showCompletedTasks?\"DONE\":`DONE(${completedTasksCount})`}</p>\n                        \n                    )}\n                </DividerIcon>\n                <DividerLine />\n            </DoneTasksDivider>\n        </Flipped>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/noTasks.6827a406.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport noTasks from \"./../../images/noTasks.svg\";\n\nconst NoTasksDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n    width: ${(p)=>p.allCompleted?\"40%\":\"70%\"};\n    margin: 30px 10px;\n`;\n\nconst NoTasksIcon = styled.div`\n    img {\n        width: 90%;\n    }\n`;\n\nexport default function NoTasks({ allCompleted }) {\n    return (\n        <NoTasksDiv allCompleted={allCompleted}>\n            <NoTasksIcon data-tip=\"\" data-for=\"taskIcon\">\n                <img src={noTasks} alt={\"No Tasks\"} />\n            </NoTasksIcon>\n        </NoTasksDiv>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateOrder } from \"./taskBoardSlice\";\nimport TaskCard from \"./../../components/TaskBoard/TaskCard\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Flipper } from \"react-flip-toolkit\";\nimport { focusOnTask } from \"./taskBoardSlice\";\nimport styled from \"styled-components\";\nimport TaskInput from \"./../../components/TaskBoard/TaskInput\";\nimport Divider from \"./../../components/TaskBoard/Divider\";\nimport NoTasks from \"../../components/TaskBoard/NoTasks\";\n\nconst TaskBoardContainer = styled.div`\n    flex: 1 1 0;\n    display: flex;\n    min-width: 396px;\n    flex-direction: column;\n    align-items: center;\n    overflow-y: scroll; // to enable scrolling by default for this flex-container only\n`;\n\nconst EmptySpace = styled.div`\n    display: flex;\n    min-width: 10px;\n    min-height: 10px;\n    margin: 10px;\n`;\n\nexport function TaskBoard() {\n    const tasks = useSelector((state) => state.tasks.taskArray);\n    const meta = useSelector((state) => state.tasks.meta);\n    let focussedTask = meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex] : null;\n    const dispatch = useDispatch();\n\n    function handleOnDragEnd(result) {\n        if (!result.destination) return;\n\n        let items = [...tasks.map((i) => ({ ...i }))];\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        let i = result.source.index;\n        let direction = result.destination.index > result.source.index; // direction true means moving right & swapping\n        // below is logic to reset globalKeys to maintain correct sort order.\n        while (i != result.destination.index) {\n            if (direction) {\n                items[i].globalKey = tasks[i].globalKey;\n                i++;\n            } else {\n                items[i].globalKey = tasks[i].globalKey;\n                i--;\n            }\n            if (i == result.destination.index) {\n                items[i].globalKey = tasks[i].globalKey;\n            }\n        }\n\n        if (meta.focussedTaskIndex !== -1) {\n            let greaterIndex = Math.max(result.destination.index, result.source.index);\n            let smallerIndex = Math.min(result.destination.index, result.source.index);\n\n            if (result.source.index === meta.focussedTaskIndex) {\n                dispatch(focusOnTask(result.destination.index));\n            } else if (meta.focussedTaskIndex >= smallerIndex && meta.focussedTaskIndex <= greaterIndex) {\n                if (result.destination.index > result.source.index) {\n                    dispatch(focusOnTask(meta.focussedTaskIndex - 1)); // -1\n                } else {\n                    dispatch(focusOnTask(meta.focussedTaskIndex + 1)); // +1\n                }\n            }\n        }\n\n        dispatch(updateOrder(items)); // order is imp. focus then updateOrder\n    }\n\n    function getFlipKey() {\n        let flipKey = \"\";\n        tasks.forEach((i) => {\n            flipKey += `${i.globalKey}`;\n        });\n        flipKey += `${meta.completedTaskStartIndex}`;\n        return flipKey;\n    }\n\n    function isFocussed(id) {\n        if (focussedTask !== null && focussedTask.id === id) return true;\n        return false;\n    }\n\n    // input has both onChange and onKeyDown - can be optimised by using one and combining\n\n    return (\n        <TaskBoardContainer>\n            <TaskInput focussedTaskIndex={meta.focussedTaskIndex} />\n            {tasks.length === 0 ? <NoTasks /> : tasks.length === meta.completedTasksCount && <NoTasks allCompleted={true} />}\n            <Flipper flipKey={getFlipKey()}>\n                <DragDropContext onDragEnd={handleOnDragEnd}>\n                    <Droppable droppableId=\"dropArea\">\n                        {(provided) => (\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\n                                {tasks.map((i, index) =>\n                                    !i.isCompleted ? (\n                                        <Draggable isDragDisabled={i.isCompleted} key={i.id} draggableId={`${i.id}`} index={index}>\n                                            {(provided2) => (\n                                                <TaskCard\n                                                    focussedTaskIndex={meta.focussedTaskIndex}\n                                                    focussedTaskGlobalKey={meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex].globalKey : -1}\n                                                    taskIndex={index}\n                                                    forwardRBDProvided={provided2}\n                                                    task={i}\n                                                    isFocussed={isFocussed(i.id)}\n                                                />\n                                            )}\n                                        </Draggable>\n                                    ) : (\n                                        \"\"\n                                    )\n                                )}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n\n                {meta.completedTaskStartIndex !== -1 && <Divider />}\n\n                {meta.showCompletedTasks &&\n                    tasks.map((i, index) =>\n                        i.isCompleted ? (\n                            <TaskCard\n                                focussedTaskIndex={meta.focussedTaskIndex}\n                                focussedTaskGlobalKey={meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex].globalKey : -1}\n                                taskIndex={index}\n                                key={i.id}\n                                forwardRBDProvided={{ innerRef: null }}\n                                task={i}\n                                isFocussed={isFocussed(i.id)}\n                            />\n                        ) : (\n                            \"\"\n                        )\n                    )}\n            </Flipper>\n            <EmptySpace />\n        </TaskBoardContainer>\n    );\n}\n","import React from \"react\";\n\nexport function MobileView() {\n    return <div style={{ backgroundColor: \"#FABB18\", width: \"100%\", height: \"100%\", color: \"#000\" }}>Not Supported on mobile</div>;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const settingsSlice = createSlice({\n    name: \"settings\",\n    initialState: {\n        darkTheme: false,\n        defaultLabel: null,\n        defaultTime: 20,\n        showTipsOnStartup: true,\n        autoCompleteZeroTimeTask: false,\n    },\n    reducers: {\n        toggleDarkTheme(settings, { payload }) {\n            if (payload !== undefined) settings.darkTheme = payload;\n            else settings.darkTheme = settings.darkTheme ? false : true;\n        },\n        updateDefaultTime(settings, { payload }) {\n            settings.defaultTime = payload;\n        },\n        updateDefaultLabel(settings, { payload }) {\n            settings.defaultLabel = payload;\n        },\n    },\n});\n\nexport const { toggleDarkTheme , updateDefaultTime , updateDefaultLabel} = settingsSlice.actions;\n\nexport default settingsSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Switch from \"react-switch\";\nimport { toggleDarkTheme } from \"./settingsSlice\";\nimport { InputDiv } from \"./index\";\n\nconst DarkModeDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 70%;\n    height: 70px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    p {\n        margin: 0;\n    }\n`;\n\nexport function DarkThemeToggle() {\n    const darkTheme = useSelector((s) => s.settings.darkTheme);\n    const dispatch = useDispatch();\n\n    return (\n        <DarkModeDiv>\n            <p>Focus Dark Mode</p>\n            <InputDiv>\n                <Switch checked={darkTheme} offColor=\"#000\" onColor=\"#fabb18\" onChange={() => dispatch(toggleDarkTheme())} />\n            </InputDiv>\n        </DarkModeDiv>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { updateDefaultTime } from \"./settingsSlice\";\nimport { InputDiv } from \"./index\";\n\nconst DefaultTaskTimeBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 70%;\n    height: 70px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    p {\n        display: inline-block;\n        margin: 0 5px 0 0;\n    }\n`;\n\nconst TimeInput = styled.input`\n    width: 50px;\n    text-align: center;\n    outline: none;\n    border: 0;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    border-bottom: 2px ${(p) => p.theme.primaryText} solid;\n    color: ${(p) => p.theme.primaryText};\n    font-size: 1em;\n    font-weight: bold;\n    /* &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    } */\n`;\n\nexport function DefaultTaskTime() {\n\n    const defaultTime = useSelector((s) => s.settings.defaultTime);\n    const [updatedTime, setUpdatedTime] = useState(defaultTime);\n    const dispatch = useDispatch();\n\n    function onBlur(updatedTime) {\n        updatedTime = updatedTime === \"\" ? 20 : updatedTime;\n        updatedTime = updatedTime === \"0\" ? 20 : updatedTime;\n        dispatch(updateDefaultTime(updatedTime));\n    }\n\n    return (\n        <DefaultTaskTimeBox>\n            <div>\n                <p>Default Task Time </p>\n                <span style={{ fontSize: \"0.8em\" }}>(1-120 mins)</span>\n            </div>\n\n            <InputDiv>\n                <TimeInput\n                    type=\"number\"\n                    min={1}\n                    max={120}\n                    onBlur={() => onBlur(updatedTime)}\n                    value={updatedTime}\n                    onChange={(e) => {\n                        if (e.target.value >= 0 && e.target.value <= 120) setUpdatedTime(e.target.value);\n                    }}\n                    onKeyDown={(e) => (e.key === \"Enter\" ? onBlur(updatedTime) : null)}\n                />\n            </InputDiv>\n        </DefaultTaskTimeBox>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { updateDefaultLabel } from \"./settingsSlice\";\nimport { InputDiv } from \"./index\";\n\nconst DefaultTaskLabelBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 70%;\n    height: 70px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    p {\n        display: inline-block;\n        margin: 0;\n    }\n`;\n\nconst LabelInput = styled.select`\n    font-weight: bold;\n    text-align: center;\n    border: 0;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    font-size:0.8em;\n    option {\n        font-weight: bold;\n    }\n`;\n\nexport function DefaultTaskLabel() {\n    const labels = useSelector((s) => s.tasks.labels);\n\n    const defaultLabel = useSelector((s) => s.settings.defaultLabel);\n    const [updatedLabel, setUpdatedLabel] = useState(defaultLabel);\n    const dispatch = useDispatch();\n\n    function onBlur(updatedLabel) {\n        updatedLabel = updatedLabel === \"none\" ? null : updatedLabel;\n        dispatch(updateDefaultLabel(updatedLabel));\n    }\n\n    return (\n        <DefaultTaskLabelBox>\n            <div>\n                <p>Default Task Label </p>\n            </div>\n\n            <InputDiv>\n                <LabelInput\n                    name=\"labels\"\n                    onBlur={() => onBlur(updatedLabel)}\n                    defaultValue={updatedLabel}\n                    onChange={(e) => setUpdatedLabel(e.target.value)}\n                    onKeyDown={(e) => (e.key === \"Enter\" ? onBlur(updatedLabel) : null)}\n                >\n                    <option value=\"none\">none</option>\n                    {/* keeping option:none at top makes it show up if taskLabel is null which is desired */}\n                    {Object.keys(labels).map((e, idx) => (\n                        <option style={{ color: `${labels[e].color}` }} key={idx} value={e}>\n                            {e}\n                        </option>\n                    ))}\n                </LabelInput>\n            </InputDiv>\n        </DefaultTaskLabelBox>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { DarkThemeToggle } from \"./DarkThemeToggle\";\nimport { DefaultTaskTime } from \"./DefaultTaskTime\";\nimport { DefaultTaskLabel } from \"./DefaultTaskLabel\";\n\nconst SettingsContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`;\n\nconst SettingsDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #fff;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.6);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.6);\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    width: 70%;\n    height: 90%;\n    border-radius: 20px;\n    color: ${(p) => p.theme.primaryText};\n    font-weight: bold;\n    h1 {\n        margin: 25px;\n    }\n`;\n\n// exported and used for input fields in settings options\nexport const InputDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 120px;\n`;\n\nexport default function Settings() {\n    return (\n        <SettingsContainer>\n            <SettingsDiv>\n                <h1>Settings</h1>\n                <DarkThemeToggle />\n                <DefaultTaskTime />\n                <DefaultTaskLabel />\n            </SettingsDiv>\n        </SettingsContainer>\n    );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  \n  body {\n    background: ${({ theme }) => theme.body};\n  }\n\n`;\n\nexport const darkTheme = {\n    type: \"d\",\n    body: \"#121212\",\n    backgroundMain: \"#141414\",\n    backgroundSecondary: \"#000\",\n    highlight: \"#fff\",\n    primaryText: \"#fff\",\n    secondaryText: \"#000\",\n};\n\nexport const lightTheme = {\n    type: \"l\",\n    body: \"#fffff3\",\n    backgroundMain: \"#fff\",\n    backgroundSecondary: \"#fff\",\n    highlight: \"#000\",\n    primaryText: \"#000\",\n    secondaryText: \"#fff\",\n};\n","import React from \"react\";\r\nimport { Menu } from \"./menu/Menu\";\r\nimport Dashboard from \"./dashboard\";\r\nimport { TaskBoard } from \"./taskBoard/TaskBoard\";\r\nimport styled from \"styled-components\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { MobileView } from \"./mobileView\";\r\nimport Settings from \"./settings\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { lightTheme, darkTheme, GlobalStyles } from \"./../helpers/themeStyles\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AppContainer = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n`;\r\n\r\nfunction App() {\r\n    const isDarkTheme = useSelector((s) => s.settings.darkTheme);\r\n\r\n    if (!isMobile)\r\n        return (\r\n            <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\r\n                <>\r\n                    <GlobalStyles />\r\n                    <AppContainer>\r\n                        <Router>\r\n                            <Menu />\r\n                            <Switch>\r\n                                <Route path=\"/settings\">\r\n                                    <Settings />\r\n                                </Route>\r\n                                <Route path=\"/\">\r\n                                    <>\r\n                                        <Dashboard />\r\n                                        <TaskBoard />\r\n                                    </>\r\n                                </Route>\r\n                            </Switch>\r\n                        </Router>\r\n                    </AppContainer>\r\n                </>\r\n            </ThemeProvider>\r\n        );\r\n    else {\r\n        return (\r\n            <AppContainer>\r\n                <MobileView />\r\n            </AppContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport tasksReducer from \"../containers/taskBoard/taskBoardSlice\";\r\nimport settingsReducer from \"../containers/settings/settingsSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n        settings:settingsReducer,\r\n    },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}